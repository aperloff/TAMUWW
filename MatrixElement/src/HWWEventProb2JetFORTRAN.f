      SUBROUTINE HWWlpM(P1,HMASS,HWIDTH,ANS)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,NEXTERNAL)
C  
C FOR PROCESS : g g -> e+ ve u~ d  
C  
C Crossing   1 is g g -> e+ ve u~ d  
      IMPLICIT NONE
C  
C CONSTANTS
C  
C   NN      Include "genps.inc"
C   NN      Include "nexternal.inc"
C   NN      Include "maxamps.inc"
      INTEGER                 NCOMB,     NCROSS         
      PARAMETER (             NCOMB=  64, NCROSS=  1)
C   NN      INTEGER    THEL
C   NN      PARAMETER (THEL=NCOMB*NCROSS)
C  
C ARGUMENTS 
C  
      REAL*8 P1(0:3,6),ANS(NCROSS)
C  
C LOCAL VARIABLES 
C  
      INTEGER NHEL(6,NCOMB),NTRY
      REAL*8 T, P(0:3,6)
CNN      REAL*8 MATRIX
C Include the new variables
      REAL*8 HWIDTH
      REAL*8 HMASS
      REAL*8 HWWlp
C End of new variables
      INTEGER IHEL,IDEN(NCROSS),IC(6,NCROSS)
      INTEGER IPROC,JC(6), I
      LOGICAL GOODHEL(NCOMB,NCROSS)
      INTEGER NGRAPHS
      REAL*8 hwgt, xtot, xtry, xrej, xr, yfrac(0:ncomb)
C   NN      INTEGER idum, ngood, igood(ncomb), jhel, j, jj
C   NN      LOGICAL warned
C   NN      REAL     xran1
C   NN      EXTERNAL xran1
C  
C GLOBAL VARIABLES
C  
C   NN      Double Precision amp2(maxamps), jamp2(0:maxflow)
C   NN      common/to_amps/  amp2,       jamp2
C   NN
C   NN      character*79         hel_buff
C   NN      common/to_helicity/  hel_buff
C   NN
C   NN      REAL*8 POL(2)
C   NN      common/to_polarization/ POL
C   NN
C   NN      integer          isum_hel
C   NN      logical                    multi_channel
C   NN      common/to_matrix/isum_hel, multi_channel
C   NN      INTEGER MAPCONFIG(0:LMAXCONFIGS), ICONFIG
C   NN      common/to_mconfigs/mapconfig, iconfig
C   NN      DATA NTRY,IDUM /0,-1/
C   NN      DATA xtry, xrej, ngood /0,0,0/
C   NN      DATA warned, isum_hel/.false.,0/
C   NN      DATA multi_channel/.true./
C   NN      SAVE yfrac, igood, jhel
C   NN      DATA NGRAPHS /    1/          
C   NN      DATA jamp2(0) /   1/          
C   NN      DATA GOODHEL/THEL*.FALSE./
      DATA (NHEL(IHEL,   1),IHEL=1, 6) /-1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,   2),IHEL=1, 6) /-1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,   3),IHEL=1, 6) /-1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,   4),IHEL=1, 6) /-1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,   5),IHEL=1, 6) /-1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,   6),IHEL=1, 6) /-1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,   7),IHEL=1, 6) /-1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,   8),IHEL=1, 6) /-1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,   9),IHEL=1, 6) /-1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  10),IHEL=1, 6) /-1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  11),IHEL=1, 6) /-1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  12),IHEL=1, 6) /-1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  13),IHEL=1, 6) /-1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  14),IHEL=1, 6) /-1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  15),IHEL=1, 6) /-1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  16),IHEL=1, 6) /-1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  17),IHEL=1, 6) /-1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  18),IHEL=1, 6) /-1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  19),IHEL=1, 6) /-1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  20),IHEL=1, 6) /-1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  21),IHEL=1, 6) /-1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  22),IHEL=1, 6) /-1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  23),IHEL=1, 6) /-1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  24),IHEL=1, 6) /-1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  25),IHEL=1, 6) /-1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  26),IHEL=1, 6) /-1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  27),IHEL=1, 6) /-1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  28),IHEL=1, 6) /-1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  29),IHEL=1, 6) /-1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  30),IHEL=1, 6) /-1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  31),IHEL=1, 6) /-1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  32),IHEL=1, 6) /-1, 1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  33),IHEL=1, 6) / 1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  34),IHEL=1, 6) / 1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  35),IHEL=1, 6) / 1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  36),IHEL=1, 6) / 1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  37),IHEL=1, 6) / 1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  38),IHEL=1, 6) / 1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  39),IHEL=1, 6) / 1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  40),IHEL=1, 6) / 1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  41),IHEL=1, 6) / 1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  42),IHEL=1, 6) / 1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  43),IHEL=1, 6) / 1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  44),IHEL=1, 6) / 1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  45),IHEL=1, 6) / 1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  46),IHEL=1, 6) / 1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  47),IHEL=1, 6) / 1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  48),IHEL=1, 6) / 1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  49),IHEL=1, 6) / 1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  50),IHEL=1, 6) / 1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  51),IHEL=1, 6) / 1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  52),IHEL=1, 6) / 1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  53),IHEL=1, 6) / 1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  54),IHEL=1, 6) / 1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  55),IHEL=1, 6) / 1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  56),IHEL=1, 6) / 1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  57),IHEL=1, 6) / 1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  58),IHEL=1, 6) / 1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  59),IHEL=1, 6) / 1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  60),IHEL=1, 6) / 1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  61),IHEL=1, 6) / 1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  62),IHEL=1, 6) / 1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  63),IHEL=1, 6) / 1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  64),IHEL=1, 6) / 1, 1, 1, 1, 1, 1/
      DATA (  IC(IHEL,  1),IHEL=1, 6) / 1, 2, 3, 4, 5, 6/
      DATA (IDEN(IHEL),IHEL=  1,  1) / 256/
C ----------
C BEGIN CODE
C ----------
C     ADDED ALL THESE LINES
      ANS(1) = 0D0
      PRINT *,"STARTING NCOMB=",NCOMB
      DO IHEL=1,NCOMB
        T= HWWlp(P1 , HMASS, HWIDTH,NHEL(1,IHEL))		
        ANS(1)=ANS(1)+T
C        PRINT *,"IHEL= ", IHEL," T= ",T," ME=",ANS(1)," IDEN(1)= "
        IF (T .GT. 0) THEN 
           PRINT *," IHEL= ", IHEL," T= ",T," ME=",ANS(1)," IDEN(1)= ",
     & DBLE(IDEN(1))
	ENDIF
      ENDDO
      
      ANS(1)=ANS(1)/DBLE(IDEN(1))
C     END ADDED ALL THESE LINES

C   NN      NTRY=NTRY+1
C   NN      DO IPROC=1,NCROSS
C   NN      CALL SWITCHMOM(P1,P,IC(1,IPROC),JC,6)
C   NN      DO IHEL=1,6
C   NN         JC(IHEL) = +1
C   NN      ENDDO
C   NN       
C   NN      IF (multi_channel) THEN
C   NN          DO IHEL=1,NGRAPHS
C   NN              amp2(ihel)=0d0
C   NN          ENDDO
C   NN          DO IHEL=1,int(jamp2(0))
C   NN              jamp2(ihel)=0d0
C   NN          ENDDO
C   NN      ENDIF
C   NN      ANS(IPROC) = 0D0
C   NN      write(hel_buff,'(16i5)') (0,i=1,nexternal)
C   NN      IF (ISUM_HEL .EQ. 0 .OR. NTRY .LT. 10) THEN
C   NN          DO IHEL=1,NCOMB
C   NN             IF (GOODHEL(IHEL,IPROC) .OR. NTRY .LT. 2) THEN
C   NN                 T=MATRIX(P ,NHEL(1,IHEL),JC(1))            
C   NN               DO JJ=1,nincoming
C   NN                 IF(POL(JJ).NE.1d0.AND.
C   NN     &              NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
C   NN                   T=T*ABS(POL(JJ))
C   NN                 ELSE IF(POL(JJ).NE.1d0)THEN
C   NN                   T=T*(2d0-ABS(POL(JJ)))
C   NN                 ENDIF
C   NN               ENDDO
C   NN               ANS(IPROC)=ANS(IPROC)+T
C   NN               IF (T .NE. 0D0 .AND. .NOT.    GOODHEL(IHEL,IPROC)) THEN
C   NN                   GOODHEL(IHEL,IPROC)=.TRUE.
C   NN                   NGOOD = NGOOD +1
C   NN                   IGOOD(NGOOD) = IHEL
C   NN               ENDIF
C   NN             ENDIF
C   NN          ENDDO
C   NN          JHEL = 1
C   NN          ISUM_HEL=MIN(ISUM_HEL,NGOOD)
C   NN      ELSE              !RANDOM HELICITY
C   NN          DO J=1,ISUM_HEL
C   NN              JHEL=JHEL+1
C   NN              IF (JHEL .GT. NGOOD) JHEL=1
C   NN              HWGT = REAL(NGOOD)/REAL(ISUM_HEL)
C   NN              IHEL = IGOOD(JHEL)
C   NN              T=MATRIX(P ,NHEL(1,IHEL),JC(1))            
C   NN              DO JJ=1,nincoming
C   NN                IF(POL(JJ).NE.1d0.AND.
C   NN     &             NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
C   NN                  T=T*ABS(POL(JJ))
C   NN                ELSE IF(POL(JJ).NE.1d0)THEN
C   NN                  T=T*(2d0-ABS(POL(JJ)))
C   NN                ENDIF
C   NN              ENDDO
C   NN              ANS(IPROC)=ANS(IPROC)+T*HWGT
C   NN          ENDDO
C   NN          IF (ISUM_HEL .EQ. 1) THEN
C   NN              WRITE(HEL_BUFF,'(16i5)')(NHEL(i,IHEL),i=1,nexternal)
C   NN          ENDIF
C   NN      ENDIF
C   NN      IF (MULTI_CHANNEL) THEN
C   NN          XTOT=0D0
C   NN          DO IHEL=1,MAPCONFIG(0)
C   NN              XTOT=XTOT+AMP2(MAPCONFIG(IHEL))
C   NN          ENDDO
C   NN          IF (XTOT.NE.0D0) THEN
C   NN              ANS(IPROC)=ANS(IPROC)*AMP2(MAPCONFIG(ICONFIG))/XTOT
C   NN          ELSE
C   NN              ANS(IPROC)=0D0
C   NN          ENDIF
C   NN      ENDIF
C   NN      ANS(IPROC)=ANS(IPROC)/DBLE(IDEN(IPROC))
C   NN      ENDDO
      END
       
       
      REAL*8 FUNCTION HWWlp(P,HMASS,HWIDTH,NHEL)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,6)
C  
C FOR PROCESS : g g -> e+ ve u~ d  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS,    NEIGEN 
      PARAMETER (NGRAPHS=   1,NEIGEN=  1) 
C   NN      include "genps.inc"
C   NN      include "nexternal.inc"
C   NN      include "maxamps.inc"
      INTEGER    NWAVEFUNCS     , NCOLOR
      PARAMETER (NWAVEFUNCS=   9, NCOLOR=   1) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C     ADDED MULTILINES BELOW
      INTEGER  maxamps
      double precision  Pi, Fourpi, Rt2, gfermi
      parameter( Pi = 3.14159265358979323846d0 )
      parameter( Fourpi = 4.0d0  * Pi )
      parameter( Rt2   = 1.414213562d0 )
      parameter( gfermi = 1.16639d-5 )
      parameter (maxamps=2500)
C     END ADDED MULTILINES BELOW
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,6)
C     Added single line below
      REAL*8 HMASS, HWIDTH
      INTEGER NHEL(6), IC(6)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NGRAPHS), JAMP(NCOLOR)
      COMPLEX*16 W(18,NWAVEFUNCS)
C  
C GLOBAL VARIABLES
C  
      Double Precision amp2(maxamps), jamp2(0:maxamps)
      common/to_amps/  amp2,       jamp2
C   NN      include "coupl.inc"
C  
C COLOR DATA
C  
      DATA Denom(1  )/            1/                                       
      DATA (CF(i,1  ),i=1  ,1  ) /     6/                                  
C               F[1, 2]T[ 6, 5]                                            
C ----------
C BEGIN CODE
C ----------
C     Added multi lines below
      double precision beamEnergy,bMass,cMass,wMass,wWidth,zMass,zWidth
      double precision tMass,sin2w,alpha,ee2,ee,sw,cw,ez,ey
      double precision alphas,temp_gwf,temp_gg, temp_sgg,gzu1,gzu2
      double precision gzd1,gzd2,gzl1,gzl2,temp_gwwz
      double precision v,temp_gwwh,temp_ghbot,temp_gh
      double complex gwf(2),gg(2),sgg(2),gzu(2),gzd(2),gzl(2)
      double complex gwwz(2),gwwh(2),ghbot(2),gh(2)
      
      beamEnergy = 3500
      bMass = 4.7
      cMass = 1.4
      wMass = 80.419
      wWidth = 2.04759
      zMass = 91.118
      zWidth = 2.441
      sin2w = 0.2312
      gzu1 = -0.257674
      gzu2 = 0.114831
      gzd1 = 0.315089
      gzd2 = -0.0574153
      gzl1 = 0.200258
      gzl2 = -0.172246
      v = 783.896
      temp_gwwh = 167.249
      temp_ghbot = -0.00599569
      alphas = 0.13
      temp_gwf = -0.461905
      temp_gwwz = 0.572763
      temp_gg = -1.27813
      temp_sgg = 1.27813
      temp_gh = 1.84379e-05
      
      gwf(1) = dcmplx(temp_gwf, Zero)
      gwf(2) = dcmplx(Zero, Zero)
      gwwz(1) = dcmplx(temp_gwwz, Zero)
      gwwz(2) = dcmplx(Zero, Zero)
      gg(1) = dcmplx(temp_gg, Zero)
      gg(2) = dcmplx(temp_gg, Zero)
      sgg(1) = dcmplx(temp_sgg, Zero)
      sgg(2) = dcmplx(Zero, Zero)
      gzu(1) = dcmplx(gzu1, Zero)
      gzu(2) = dcmplx(gzu2, Zero)
      gzd(1) = dcmplx(gzd1, Zero)
      gzd(2) = dcmplx(gzd2, Zero)
      gzl(1) = dcmplx(gzl1, Zero)
      gzl(2) = dcmplx(gzl2, Zero)
      gwwh(1) = dcmplx(temp_gwwh, Zero)
      gwwh(2) = dcmplx(Zero, Zero)
      ghbot(1) = dcmplx(temp_ghbot, Zero)
      ghbot(2) = dcmplx(temp_ghbot, Zero)
      gh(1) = dcmplx(temp_gh, Zero)
      gh(2) = dcmplx(Zero, Zero)



C  Remove the IC

      CALL VXXXXX(P(0,1   ),ZERO ,NHEL(1   ),-1,W(1,1   ))        
      CALL VXXXXX(P(0,2   ),ZERO ,NHEL(2   ),-1,W(1,2   ))        
      CALL IXXXXX(P(0,3   ),ZERO ,NHEL(3   ),-1,W(1,3   ))        
      CALL OXXXXX(P(0,4   ),ZERO ,NHEL(4   ),+1,W(1,4   ))        
      CALL IXXXXX(P(0,5   ),ZERO ,NHEL(5   ),-1,W(1,5   ))        
      CALL OXXXXX(P(0,6   ),ZERO ,NHEL(6   ),+1,W(1,6   ))        
      CALL HVVHXX(W(1,1   ),W(1,2   ),GH ,HMASS   ,HWIDTH  ,W(1,7   ))     
      CALL JIOXXX(W(1,3   ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,8   ))    
      CALL JVSXXX(W(1,8   ),W(1,7   ),GWWH ,WMASS   ,WWIDTH  ,W(1,9  ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,9   ),GWF ,AMP(1   ))            
      JAMP(   1) =      2*( +AMP(   1))
      HWWlp = 0.D0 
      DO I = 1, NCOLOR
          ZTEMP = (0.D0,0.D0)
          DO J = 1, NCOLOR
              ZTEMP = ZTEMP + CF(J,I)*JAMP(J)
          ENDDO
          HWWlp =HWWlp+ZTEMP*DCONJG(JAMP(I))/DENOM(I)   
      ENDDO
      Do I = 1, NGRAPHS
          amp2(i)=amp2(i)+amp(i)*dconjg(amp(i))
      Enddo
      Do I = 1, NCOLOR
          Jamp2(i)=Jamp2(i)+Jamp(i)*dconjg(Jamp(i))
      Enddo
C      CALL GAUGECHECK(JAMP,ZTEMP,EIGEN_VEC,EIGEN_VAL,NCOLOR,NEIGEN) 
      END
       
CCC ---------------------------------------------------------------------------------------------------------------
CCC ---------------------------------------------------------------------------------------------------------------
CCC ---------------------------------------------------------------------------------------------------------------

        SUBROUTINE HWWlmM(P1,HMASS,HWIDTH,ANS)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,6)
C  
C FOR PROCESS : g g -> e- ve~ u d~  
C  
C Crossing   1 is g g -> e- ve~ u d~  
      IMPLICIT NONE
C  
C CONSTANTS
C  
C   NN      Include "genps.inc"
C   NN      Include "nexternal.inc"
C   NN      Include "maxamps.inc"
      INTEGER                 NCOMB,     NCROSS         
      PARAMETER (             NCOMB=  64, NCROSS=  1)
C   NN      INTEGER    THEL
C   NN      PARAMETER (THEL=NCOMB*NCROSS)
C  
C ARGUMENTS 
C  
      REAL*8 P1(0:3,6),ANS(NCROSS)
C  
C LOCAL VARIABLES 
C  
      INTEGER NHEL(6,NCOMB),NTRY
      REAL*8 T, P(0:3,6)
C   NN      REAL*8 MATRIX
C Include the new variables
      REAL*8 HWIDTH
      REAL*8 HMASS
      REAL*8 HWWlm
C End of new variables
      INTEGER IHEL,IDEN(NCROSS),IC(6,NCROSS)
      INTEGER IPROC,JC(6), I
      LOGICAL GOODHEL(NCOMB,NCROSS)
      INTEGER NGRAPHS
      REAL*8 hwgt, xtot, xtry, xrej, xr, yfrac(0:ncomb)
C NN      INTEGER idum, ngood, igood(ncomb), jhel, j, jj
C NN      LOGICAL warned
C NN      REAL     xran1
C NN      EXTERNAL xran1
C NNC  
C NNC GLOBAL VARIABLES
C NNC  
C NN      Double Precision amp2(maxamps), jamp2(0:maxflow)
C NN      common/to_amps/  amp2,       jamp2
C NN
C NN      character*79         hel_buff
C NN      common/to_helicity/  hel_buff
C NN
C NN      REAL*8 POL(2)
C NN      common/to_polarization/ POL
C NN
C NN      integer          isum_hel
C NN      logical                    multi_channel
C NN      common/to_matrix/isum_hel, multi_channel
C NN      INTEGER MAPCONFIG(0:LMAXCONFIGS), ICONFIG
C NN      common/to_mconfigs/mapconfig, iconfig
C NN      DATA NTRY,IDUM /0,-1/
C NN      DATA xtry, xrej, ngood /0,0,0/
C NN      DATA warned, isum_hel/.false.,0/
C NN      DATA multi_channel/.true./
C NN      SAVE yfrac, igood, jhel
C NN      DATA NGRAPHS /    1/          
C NN      DATA jamp2(0) /   1/          
C NN      DATA GOODHEL/THEL*.FALSE./
      DATA (NHEL(IHEL,   1),IHEL=1, 6) /-1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,   2),IHEL=1, 6) /-1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,   3),IHEL=1, 6) /-1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,   4),IHEL=1, 6) /-1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,   5),IHEL=1, 6) /-1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,   6),IHEL=1, 6) /-1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,   7),IHEL=1, 6) /-1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,   8),IHEL=1, 6) /-1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,   9),IHEL=1, 6) /-1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  10),IHEL=1, 6) /-1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  11),IHEL=1, 6) /-1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  12),IHEL=1, 6) /-1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  13),IHEL=1, 6) /-1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  14),IHEL=1, 6) /-1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  15),IHEL=1, 6) /-1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  16),IHEL=1, 6) /-1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  17),IHEL=1, 6) /-1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  18),IHEL=1, 6) /-1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  19),IHEL=1, 6) /-1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  20),IHEL=1, 6) /-1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  21),IHEL=1, 6) /-1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  22),IHEL=1, 6) /-1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  23),IHEL=1, 6) /-1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  24),IHEL=1, 6) /-1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  25),IHEL=1, 6) /-1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  26),IHEL=1, 6) /-1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  27),IHEL=1, 6) /-1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  28),IHEL=1, 6) /-1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  29),IHEL=1, 6) /-1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  30),IHEL=1, 6) /-1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  31),IHEL=1, 6) /-1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  32),IHEL=1, 6) /-1, 1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  33),IHEL=1, 6) / 1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  34),IHEL=1, 6) / 1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  35),IHEL=1, 6) / 1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  36),IHEL=1, 6) / 1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  37),IHEL=1, 6) / 1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  38),IHEL=1, 6) / 1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  39),IHEL=1, 6) / 1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  40),IHEL=1, 6) / 1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  41),IHEL=1, 6) / 1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  42),IHEL=1, 6) / 1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  43),IHEL=1, 6) / 1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  44),IHEL=1, 6) / 1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  45),IHEL=1, 6) / 1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  46),IHEL=1, 6) / 1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  47),IHEL=1, 6) / 1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  48),IHEL=1, 6) / 1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  49),IHEL=1, 6) / 1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  50),IHEL=1, 6) / 1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  51),IHEL=1, 6) / 1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  52),IHEL=1, 6) / 1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  53),IHEL=1, 6) / 1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  54),IHEL=1, 6) / 1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  55),IHEL=1, 6) / 1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  56),IHEL=1, 6) / 1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  57),IHEL=1, 6) / 1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  58),IHEL=1, 6) / 1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  59),IHEL=1, 6) / 1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  60),IHEL=1, 6) / 1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  61),IHEL=1, 6) / 1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  62),IHEL=1, 6) / 1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  63),IHEL=1, 6) / 1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  64),IHEL=1, 6) / 1, 1, 1, 1, 1, 1/
      DATA (  IC(IHEL,  1),IHEL=1, 6) / 1, 2, 3, 4, 5, 6/
      DATA (IDEN(IHEL),IHEL=  1,  1) / 256/
C ----------
C BEGIN CODE
C ----------
C     ADDED ALL THESE LINES
      ANS(1) = 0D0
      PRINT *,"STARTING NCOMB=",NCOMB
      DO IHEL=1,NCOMB
        T= HWWlm(P1 , HMASS, HWIDTH,NHEL(1,IHEL))		
        ANS(1)=ANS(1)+T
C        PRINT *,"IHEL= ", IHEL," T= ",T," ME=",ANS(1)," IDEN(1)= "
        IF (T .GT. 0) THEN 
           PRINT *," IHEL= ", IHEL," T= ",T," ME=",ANS(1)," IDEN(1)= ",
     & DBLE(IDEN(1))
	ENDIF
      ENDDO
      
      ANS(1)=ANS(1)/DBLE(IDEN(1))
C     END ADDED ALL THESE LINES

C NN      NTRY=NTRY+1
C NN      DO IPROC=1,NCROSS
C NN      CALL SWITCHMOM(P1,P,IC(1,IPROC),JC,6)
C NN      DO IHEL=1,6
C NN         JC(IHEL) = +1
C NN      ENDDO
C NN       
C NN      IF (multi_channel) THEN
C NN          DO IHEL=1,NGRAPHS
C NN              amp2(ihel)=0d0
C NN          ENDDO
C NN          DO IHEL=1,int(jamp2(0))
C NN              jamp2(ihel)=0d0
C NN          ENDDO
C NN      ENDIF
C NN      ANS(IPROC) = 0D0
C NN      write(hel_buff,'(16i5)') (0,i=1,nexternal)
C NN      IF (ISUM_HEL .EQ. 0 .OR. NTRY .LT. 10) THEN
C NN          DO IHEL=1,NCOMB
C NN             IF (GOODHEL(IHEL,IPROC) .OR. NTRY .LT. 2) THEN
C NN                 T=MATRIX(P ,NHEL(1,IHEL),JC(1))            
C NN               DO JJ=1,nincoming
C NN                 IF(POL(JJ).NE.1d0.AND.
C NN     &              NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
C NN                   T=T*ABS(POL(JJ))
C NN                 ELSE IF(POL(JJ).NE.1d0)THEN
C NN                   T=T*(2d0-ABS(POL(JJ)))
C NN                 ENDIF
C NN               ENDDO
C NN               ANS(IPROC)=ANS(IPROC)+T
C NN               IF (T .NE. 0D0 .AND. .NOT.    GOODHEL(IHEL,IPROC)) THEN
C NN                   GOODHEL(IHEL,IPROC)=.TRUE.
C NN                   NGOOD = NGOOD +1
C NN                   IGOOD(NGOOD) = IHEL
C NN               ENDIF
C NN             ENDIF
C NN          ENDDO
C NN          JHEL = 1
C NN          ISUM_HEL=MIN(ISUM_HEL,NGOOD)
C NN      ELSE              !RANDOM HELICITY
C NN          DO J=1,ISUM_HEL
C NN              JHEL=JHEL+1
C NN              IF (JHEL .GT. NGOOD) JHEL=1
C NN              HWGT = REAL(NGOOD)/REAL(ISUM_HEL)
C NN              IHEL = IGOOD(JHEL)
C NN              T=MATRIX(P ,NHEL(1,IHEL),JC(1))            
C NN              DO JJ=1,nincoming
C NN                IF(POL(JJ).NE.1d0.AND.
C NN     &             NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
C NN                  T=T*ABS(POL(JJ))
C NN                ELSE IF(POL(JJ).NE.1d0)THEN
C NN                  T=T*(2d0-ABS(POL(JJ)))
C NN                ENDIF
C NN              ENDDO
C NN              ANS(IPROC)=ANS(IPROC)+T*HWGT
C NN          ENDDO
C NN          IF (ISUM_HEL .EQ. 1) THEN
C NN              WRITE(HEL_BUFF,'(16i5)')(NHEL(i,IHEL),i=1,nexternal)
C NN          ENDIF
C NN      ENDIF
C NN      IF (MULTI_CHANNEL) THEN
C NN          XTOT=0D0
C NN          DO IHEL=1,MAPCONFIG(0)
C NN              XTOT=XTOT+AMP2(MAPCONFIG(IHEL))
C NN          ENDDO
C NN          IF (XTOT.NE.0D0) THEN
C NN              ANS(IPROC)=ANS(IPROC)*AMP2(MAPCONFIG(ICONFIG))/XTOT
C NN          ELSE
C NN              ANS(IPROC)=0D0
C NN          ENDIF
C NN      ENDIF
C NN      ANS(IPROC)=ANS(IPROC)/DBLE(IDEN(IPROC))
C NN      ENDDO
      END
       
       
      REAL*8 FUNCTION HWWlm(P,HMASS,HWIDTH,NHEL)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,6)
C  
C FOR PROCESS : g g -> e- ve~ u d~  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS,    NEIGEN 
      PARAMETER (NGRAPHS=   1,NEIGEN=  1) 
C   NN      include "genps.inc"
C   NN      include "nexternal.inc"
C   NN      include "maxamps.inc"
      INTEGER    NWAVEFUNCS     , NCOLOR
      PARAMETER (NWAVEFUNCS=   9, NCOLOR=   1) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C     ADDED MULTILINES BELOW
      INTEGER  maxamps
      double precision  Pi, Fourpi, Rt2, gfermi
      parameter( Pi = 3.14159265358979323846d0 )
      parameter( Fourpi = 4.0d0  * Pi )
      parameter( Rt2   = 1.414213562d0 )
      parameter( gfermi = 1.16639d-5 )
      parameter (maxamps=2500)
C     END ADDED MULTILINES BELOW
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,6)
C     Added single line below
      REAL*8 HMASS, HWIDTH
      INTEGER NHEL(6), IC(6)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NGRAPHS), JAMP(NCOLOR)
      COMPLEX*16 W(18,NWAVEFUNCS)
C  
C GLOBAL VARIABLES
C  
      Double Precision amp2(maxamps), jamp2(0:maxamps)
      common/to_amps/  amp2,       jamp2
C   NN      include "coupl.inc"
C  
C COLOR DATA
C  
      DATA Denom(1  )/            1/                                       
      DATA (CF(i,1  ),i=1  ,1  ) /     6/                                  
C               F[1, 2]T[ 5, 6]                                            
C ----------
C BEGIN CODE
C ----------
C     Added multi lines below
      double precision beamEnergy,bMass,cMass,wMass,wWidth,zMass,zWidth
      double precision tMass,sin2w,alpha,ee2,ee,sw,cw,ez,ey
      double precision alphas,temp_gwf,temp_gg, temp_sgg,gzu1,gzu2
      double precision gzd1,gzd2,gzl1,gzl2,temp_gwwz
      double precision v,temp_gwwh,temp_ghbot,temp_gh
      double complex gwf(2),gg(2),sgg(2),gzu(2),gzd(2),gzl(2)
      double complex gwwz(2),gwwh(2),ghbot(2),gh(2)

      beamEnergy = 3500
      bMass = 4.7
      cMass = 1.4
      wMass = 80.419
      wWidth = 2.04759
      zMass = 91.118
      zWidth = 2.441
      sin2w = 0.2312
      gzu1 = -0.257674
      gzu2 = 0.114831
      gzd1 = 0.315089
      gzd2 = -0.0574153
      gzl1 = 0.200258
      gzl2 = -0.172246
      v = 783.896
      temp_gwwh = 167.249
      temp_ghbot = -0.00599569
      alphas = 0.13
      temp_gwf = -0.461905
      temp_gwwz = 0.572763
      temp_gg = -1.27813
      temp_sgg = 1.27813
      temp_gh = 1.84379e-05

      gwf(1) = dcmplx(temp_gwf, Zero)
      gwf(2) = dcmplx(Zero, Zero)
      gwwz(1) = dcmplx(temp_gwwz, Zero)
      gwwz(2) = dcmplx(Zero, Zero)
      gg(1) = dcmplx(temp_gg, Zero)
      gg(2) = dcmplx(temp_gg, Zero)
      sgg(1) = dcmplx(temp_sgg, Zero)
      sgg(2) = dcmplx(Zero, Zero)
      gzu(1) = dcmplx(gzu1, Zero)
      gzu(2) = dcmplx(gzu2, Zero)
      gzd(1) = dcmplx(gzd1, Zero)
      gzd(2) = dcmplx(gzd2, Zero)
      gzl(1) = dcmplx(gzl1, Zero)
      gzl(2) = dcmplx(gzl2, Zero)
      gwwh(1) = dcmplx(temp_gwwh, Zero)
      gwwh(2) = dcmplx(Zero, Zero)
      ghbot(1) = dcmplx(temp_ghbot, Zero)
      ghbot(2) = dcmplx(temp_ghbot, Zero)
      gh(1) = dcmplx(temp_gh, Zero)
      gh(2) = dcmplx(Zero, Zero)

C  Remove the IC

      CALL VXXXXX(P(0,1   ),ZERO ,NHEL(1   ),-1,W(1,1   ))        
      CALL VXXXXX(P(0,2   ),ZERO ,NHEL(2   ),-1,W(1,2   ))        
      CALL OXXXXX(P(0,3   ),ZERO ,NHEL(3   ),+1,W(1,3   ))        
      CALL IXXXXX(P(0,4   ),ZERO ,NHEL(4   ),-1,W(1,4   ))        
      CALL OXXXXX(P(0,5   ),ZERO ,NHEL(5   ),+1,W(1,5   ))        
      CALL IXXXXX(P(0,6   ),ZERO ,NHEL(6   ),-1,W(1,6   ))        
      CALL HVVHXX(W(1,1   ),W(1,2   ),GH ,HMASS   ,HWIDTH  ,W(1,7   ))     
      CALL JIOXXX(W(1,4   ),W(1,3   ),GWF ,WMASS   ,WWIDTH  ,W(1,8   ))    
      CALL JVSXXX(W(1,8   ),W(1,7   ),GWWH ,WMASS   ,WWIDTH  ,W(1,         
     &     9   ))                                                          
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,9   ),GWF ,AMP(1   ))            
      JAMP(   1) =      2*( +AMP(   1))
      HWWlm = 0.D0 
      DO I = 1, NCOLOR
          ZTEMP = (0.D0,0.D0)
          DO J = 1, NCOLOR
              ZTEMP = ZTEMP + CF(J,I)*JAMP(J)
          ENDDO
          HWWlm =HWWlm+ZTEMP*DCONJG(JAMP(I))/DENOM(I)   
      ENDDO
      Do I = 1, NGRAPHS
          amp2(i)=amp2(i)+amp(i)*dconjg(amp(i))
      Enddo
      Do I = 1, NCOLOR
          Jamp2(i)=Jamp2(i)+Jamp(i)*dconjg(Jamp(i))
      Enddo
C      CALL GAUGECHECK(JAMP,ZTEMP,EIGEN_VEC,EIGEN_VAL,NCOLOR,NEIGEN) 
      END
       
