      SUBROUTINE tChanlpM(P1,MW,ANS)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,NEXTERNAL)
C  
C FOR PROCESS : u b -> b e+ ve d  
C  
C Crossing   1 is u b -> b e+ ve d  
      IMPLICIT NONE
C  
C CONSTANTS
C  
CNN      Include "genps.inc"
CNN      Include "nexternal.inc"
CNN      Include "maxamps.inc"
      INTEGER                 NCOMB,     NCROSS         
      PARAMETER (             NCOMB=  64, NCROSS=  1)
CNN      INTEGER    THEL
CNN      PARAMETER (THEL=NCOMB*NCROSS)
C  
C ARGUMENTS 
C  
      REAL*8 P1(0:3,6),ANS(NCROSS)
C  
C LOCAL VARIABLES 
C  
      INTEGER NHEL(6,NCOMB),NTRY
      REAL*8 T, P(0:3,6)
      REAL*8 MATRIX
C Include the new variables
      REAL*8 MW
      REAL*8 MZ
      REAL*8 tChanlp
C End of new variables
      INTEGER IHEL,IDEN(NCROSS),IC(6,NCROSS)
      INTEGER IPROC,JC(6), I
      LOGICAL GOODHEL(NCOMB,NCROSS)
      INTEGER NGRAPHS
CNN      REAL*8 hwgt, xtot, xtry, xrej, xr, yfrac(0:ncomb)
CNN      INTEGER idum, ngood, igood(ncomb), jhel, j, jj
CNN      LOGICAL warned
CNN      REAL     xran1
CNN      EXTERNAL xran1
CNNC  
CNNC GLOBAL VARIABLES
CNNC  
CNN      Double Precision amp2(maxamps), jamp2(0:maxamps)
CNN      common/to_amps/  amp2,       jamp2
CNN
CNN      character*79         hel_buff
CNN      common/to_helicity/  hel_buff
CNN
CNN      REAL*8 POL(2)
CNN      common/to_polarization/ POL
CNN
CNN      integer          isum_hel
CNN      logical                    multi_channel
CNN      common/to_matrix/isum_hel, multi_channel
CNN      INTEGER MAPCONFIG(0:LMAXCONFIGS), ICONFIG
CNN      common/to_mconfigs/mapconfig, iconfig
CNN      DATA NTRY,IDUM /0,-1/
CNN      DATA xtry, xrej, ngood /0,0,0/
CNN      DATA warned, isum_hel/.false.,0/
CNN      DATA multi_channel/.true./
CNN      SAVE yfrac, igood, jhel
CNN      DATA NGRAPHS /    1/          
CNN      DATA jamp2(0) /   1/          
CNN      DATA GOODHEL/THEL*.FALSE./
      DATA (NHEL(IHEL,   1),IHEL=1, 6) /-1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,   2),IHEL=1, 6) /-1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,   3),IHEL=1, 6) /-1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,   4),IHEL=1, 6) /-1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,   5),IHEL=1, 6) /-1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,   6),IHEL=1, 6) /-1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,   7),IHEL=1, 6) /-1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,   8),IHEL=1, 6) /-1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,   9),IHEL=1, 6) /-1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  10),IHEL=1, 6) /-1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  11),IHEL=1, 6) /-1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  12),IHEL=1, 6) /-1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  13),IHEL=1, 6) /-1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  14),IHEL=1, 6) /-1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  15),IHEL=1, 6) /-1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  16),IHEL=1, 6) /-1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  17),IHEL=1, 6) /-1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  18),IHEL=1, 6) /-1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  19),IHEL=1, 6) /-1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  20),IHEL=1, 6) /-1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  21),IHEL=1, 6) /-1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  22),IHEL=1, 6) /-1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  23),IHEL=1, 6) /-1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  24),IHEL=1, 6) /-1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  25),IHEL=1, 6) /-1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  26),IHEL=1, 6) /-1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  27),IHEL=1, 6) /-1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  28),IHEL=1, 6) /-1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  29),IHEL=1, 6) /-1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  30),IHEL=1, 6) /-1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  31),IHEL=1, 6) /-1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  32),IHEL=1, 6) /-1, 1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  33),IHEL=1, 6) / 1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  34),IHEL=1, 6) / 1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  35),IHEL=1, 6) / 1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  36),IHEL=1, 6) / 1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  37),IHEL=1, 6) / 1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  38),IHEL=1, 6) / 1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  39),IHEL=1, 6) / 1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  40),IHEL=1, 6) / 1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  41),IHEL=1, 6) / 1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  42),IHEL=1, 6) / 1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  43),IHEL=1, 6) / 1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  44),IHEL=1, 6) / 1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  45),IHEL=1, 6) / 1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  46),IHEL=1, 6) / 1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  47),IHEL=1, 6) / 1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  48),IHEL=1, 6) / 1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  49),IHEL=1, 6) / 1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  50),IHEL=1, 6) / 1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  51),IHEL=1, 6) / 1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  52),IHEL=1, 6) / 1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  53),IHEL=1, 6) / 1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  54),IHEL=1, 6) / 1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  55),IHEL=1, 6) / 1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  56),IHEL=1, 6) / 1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  57),IHEL=1, 6) / 1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  58),IHEL=1, 6) / 1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  59),IHEL=1, 6) / 1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  60),IHEL=1, 6) / 1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  61),IHEL=1, 6) / 1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  62),IHEL=1, 6) / 1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  63),IHEL=1, 6) / 1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  64),IHEL=1, 6) / 1, 1, 1, 1, 1, 1/
      DATA (  IC(IHEL,  1),IHEL=1, 6) / 1, 2, 3, 4, 5, 6/
      DATA (IDEN(IHEL),IHEL=  1,  1) /  36/
C ----------
C BEGIN CODE
C ----------
C     ADDED ALL THESE LINES
      ANS(1) = 0D0
      PRINT *,"STARTING NCOMB=",NCOMB
      DO IHEL=1,NCOMB
        T= tChanlp(P1, MW,NHEL(1,IHEL))		
        ANS(1)=ANS(1)+T
C        PRINT *,"IHEL= ", IHEL," T= ",T," ME=",ANS(1)," IDEN(1)= "
        IF (T .GT. 0) THEN 
           PRINT *," IHEL= ", IHEL," T= ",T," ME=",ANS(1)," IDEN(1)= ",
     & DBLE(IDEN(1))
	ENDIF
      ENDDO
      
      ANS(1)=ANS(1)/DBLE(IDEN(1))
C     END ADDED ALL THESE LINES

CNN    NTRY=NTRY+1
CNN    DO IPROC=1,NCROSS
CNN    CALL SWITCHMOM(P1,P,IC(1,IPROC),JC,6)
CNN    DO IHEL=1,6
CNN       JC(IHEL) = +1
CNN    ENDDO
CNN     
CNN    IF (multi_channel) THEN
CNN        DO IHEL=1,NGRAPHS
CNN            amp2(ihel)=0d0
CNN            jamp2(ihel)=0d0
CNN        ENDDO
CNN        DO IHEL=1,int(jamp2(0))
CNN            jamp2(ihel)=0d0
CNN        ENDDO
CNN    ENDIF
CNN    ANS(IPROC) = 0D0
CNN    write(hel_buff,'(16i5)') (0,i=1,nexternal)
CNN    IF (ISUM_HEL .EQ. 0 .OR. NTRY .LT. 10) THEN
CNN        DO IHEL=1,NCOMB
CNN           IF (GOODHEL(IHEL,IPROC) .OR. NTRY .LT. 2) THEN
CNN               T=MATRIX(P ,NHEL(1,IHEL),JC(1))            
CNN             DO JJ=1,nincoming
CNN               IF(POL(JJ).NE.1d0.AND.
CNN   &              NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
CNN                 T=T*ABS(POL(JJ))
CNN               ELSE IF(POL(JJ).NE.1d0)THEN
CNN                 T=T*(2d0-ABS(POL(JJ)))
CNN               ENDIF
CNN             ENDDO
CNN             ANS(IPROC)=ANS(IPROC)+T
CNN             IF (T .NE. 0D0 .AND. .NOT.    GOODHEL(IHEL,IPROC)) THEN
CNN                 GOODHEL(IHEL,IPROC)=.TRUE.
CNN                 NGOOD = NGOOD +1
CNN                 IGOOD(NGOOD) = IHEL
CNN             ENDIF
CNN           ENDIF
CNN        ENDDO
CNN        JHEL = 1
CNN        ISUM_HEL=MIN(ISUM_HEL,NGOOD)
CNN    ELSE              !RANDOM HELICITY
CNN        DO J=1,ISUM_HEL
CNN            JHEL=JHEL+1
CNN            IF (JHEL .GT. NGOOD) JHEL=1
CNN            HWGT = REAL(NGOOD)/REAL(ISUM_HEL)
CNN            IHEL = IGOOD(JHEL)
CNN            T=MATRIX(P ,NHEL(1,IHEL),JC(1))            
CNN            DO JJ=1,nincoming
CNN              IF(POL(JJ).NE.1d0.AND.
CNN   &             NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
CNN                T=T*ABS(POL(JJ))
CNN              ELSE IF(POL(JJ).NE.1d0)THEN
CNN                T=T*(2d0-ABS(POL(JJ)))
CNN              ENDIF
CNN            ENDDO
CNN            ANS(IPROC)=ANS(IPROC)+T*HWGT
CNN        ENDDO
CNN        IF (ISUM_HEL .EQ. 1) THEN
CNN            WRITE(HEL_BUFF,'(16i5)')(NHEL(i,IHEL),i=1,nexternal)
CNN        ENDIF
CNN    ENDIF
CNN    IF (MULTI_CHANNEL) THEN
CNN        XTOT=0D0
CNN        DO IHEL=1,MAPCONFIG(0)
CNN            XTOT=XTOT+AMP2(MAPCONFIG(IHEL))
CNN        ENDDO
CNN        IF (XTOT.NE.0D0) THEN
CNN            ANS(IPROC)=ANS(IPROC)*AMP2(MAPCONFIG(ICONFIG))/XTOT
CNN        ELSE
CNN            ANS(IPROC)=0D0
CNN        ENDIF
CNN    ENDIF
CNN    ANS(IPROC)=ANS(IPROC)/DBLE(IDEN(IPROC))
CNN    ENDDO
      END
       
       
      REAL*8 FUNCTION tChanlp(P,MW,NHEL)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,6)
C  
C FOR PROCESS : u b -> b e+ ve d  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS,    NEIGEN 
      PARAMETER (NGRAPHS=   1,NEIGEN=  1) 
CNN      include "genps.inc"
CNN      include "nexternal.inc"
CNN      include "maxamps.inc"
      INTEGER    NWAVEFUNCS     , NCOLOR
      PARAMETER (NWAVEFUNCS=   9, NCOLOR=   1) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C     ADDED MULTILINES BELOW
      INTEGER  maxamps
      double precision  Pi, Fourpi, Rt2, gfermi
      parameter( Pi = 3.14159265358979323846d0 )
      parameter( Fourpi = 4.0d0  * Pi )
      parameter( Rt2   = 1.414213562d0 )
      parameter( gfermi = 1.16639d-5 )
      parameter (maxamps=2500)
C     END ADDED MULTILINES BELOW
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,6)
C     Added single line below
      REAL*8 MH, MZ, MW
      INTEGER NHEL(6), IC(6)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NGRAPHS), JAMP(NCOLOR)
      COMPLEX*16 W(18,NWAVEFUNCS)
C  
C GLOBAL VARIABLES
C  
      Double Precision amp2(maxamps), jamp2(0:maxamps)
      common/to_amps/  amp2,       jamp2
CNN      include "coupl.inc"
C  
C COLOR DATA
C  
      DATA Denom(1  )/            1/                                       
      DATA (CF(i,1  ),i=1  ,1  ) /     9/                                  
C               T[ 3, 2]T[ 6, 1]                                           
C ----------
C BEGIN CODE
C ----------
C     Added multi lines below
      double precision beamEnergy,bMass,cMass,wMass,wWidth,zMass,zWidth
      double precision tMass,tWidth,sin2w,alpha,ee2,ee,sw,cw,ez,ey
      double precision alphas,temp_gwf,temp_gg, temp_sgg,gzu1,gzu2
      double precision gzd1,gzd2,gzl1,gzl2,temp_gwwz,v,gwwh,ghbot
      double complex gwf(2),gg(2),sgg(2),gwwz(2),gzu(2),gzd(2),gzl(2)

      beamEnergy = 3500
      bMass = 4.7
      cMass = 1.4
      wMass = 80.419
      wWidth = 2.04759
      zMass = 91.118
      zWidth = 2.441
      tMass = 172.5
      tWidth = 1.46151
      sin2w = 0.2312
      gzu1 = -0.257674
      gzu2 = 0.114831
      gzd1 = 0.315089
      gzd2 = -0.0574153
      gzl1 = 0.200258
      gzl2 = -0.172246
      v = 783.896
      gwwh = 167.249
      ghbot = -0.00599569
      alphas = 0.13
      temp_gwf = -0.461905
      temp_gwwz = 0.572763
      temp_gg = -1.27813
      temp_sgg = 1.27813


      gwf(1) = dcmplx(temp_gwf, Zero)
      gwf(2) = dcmplx(Zero, Zero)
      gwwz(1) = dcmplx(temp_gwwz, Zero)
      gwwz(2) = dcmplx(Zero, Zero)
      gg(1) = dcmplx(temp_gg, Zero)
      gg(2) = dcmplx(temp_gg, Zero)
      sgg(1) = dcmplx(temp_sgg, Zero)
      sgg(2) = dcmplx(Zero, Zero)
      gzu(1) = dcmplx(gzu1, Zero)
      gzu(2) = dcmplx(gzu2, Zero)
      gzd(1) = dcmplx(gzd1, Zero)
      gzd(2) = dcmplx(gzd2, Zero)
      gzl(1) = dcmplx(gzl1, Zero)
      gzl(2) = dcmplx(gzl2, Zero)
      
CCC  Remove the IC
      CALL IXXXXX(P(0,1   ),ZERO ,NHEL(1   ),+1,W(1,1   ))        
      CALL IXXXXX(P(0,2   ),BMASS ,NHEL(2   ),+1,W(1,2   ))       
      CALL OXXXXX(P(0,3   ),BMASS ,NHEL(3   ),+1,W(1,3   ))       
      CALL IXXXXX(P(0,4   ),ZERO ,NHEL(4   ),-1,W(1,4   ))        
      CALL OXXXXX(P(0,5   ),ZERO ,NHEL(5   ),+1,W(1,5   ))        
      CALL OXXXXX(P(0,6   ),ZERO ,NHEL(6   ),+1,W(1,6   ))        
      CALL JIOXXX(W(1,4   ),W(1,5   ),GWF ,WMASS   ,WWIDTH  ,W(1,7   ))    
      CALL FVOXXX(W(1,3   ),W(1,7   ),GWF ,TMASS   ,TWIDTH  ,W(1,8   ))    
      CALL JIOXXX(W(1,2   ),W(1,8   ),GWF ,WMASS   ,WWIDTH  ,W(1,9   ))    
      CALL IOVXXX(W(1,1   ),W(1,6   ),W(1,9   ),GWF ,AMP(1   ))            
      JAMP(   1) = +AMP(   1)
      tChanlp = 0.D0 
      DO I = 1, NCOLOR
          ZTEMP = (0.D0,0.D0)
          DO J = 1, NCOLOR
              ZTEMP = ZTEMP + CF(J,I)*JAMP(J)
          ENDDO
          tChanlp =tChanlp+ZTEMP*DCONJG(JAMP(I))/DENOM(I)   
      ENDDO
      Do I = 1, NGRAPHS
          amp2(i)=amp2(i)+amp(i)*dconjg(amp(i))
      Enddo
      Do I = 1, NCOLOR
          Jamp2(i)=Jamp2(i)+Jamp(i)*dconjg(Jamp(i))
      Enddo
C      CALL GAUGECHECK(JAMP,ZTEMP,EIGEN_VEC,EIGEN_VAL,NCOLOR,NEIGEN) 
      END
       

CCC ---------------------------------------------------------------------------------------------------------------
CCC ---------------------------------------------------------------------------------------------------------------
CCC ---------------------------------------------------------------------------------------------------------------

      SUBROUTINE tChanlpAltM(P1,MW,ANS)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,6)
C  
C FOR PROCESS : b u -> b e+ ve d  
C  
C Crossing   1 is b u -> b e+ ve d  
      IMPLICIT NONE
C  
C CONSTANTS
C  
CNN      Include "genps.inc"
CNN      Include "nexternal.inc"
CNN      Include "maxamps.inc"
      INTEGER                 NCOMB,     NCROSS         
      PARAMETER (             NCOMB=  64, NCROSS=  1)
CNN      INTEGER    THEL
CNN      PARAMETER (THEL=NCOMB*NCROSS)
C  
C ARGUMENTS 
C  
      REAL*8 P1(0:3,6),ANS(NCROSS)
C  
C LOCAL VARIABLES 
C  
      INTEGER NHEL(6,NCOMB),NTRY
      REAL*8 T, P(0:3,6)
      REAL*8 MATRIX
C Include the new variables
      REAL*8 MW
      REAL*8 MZ
      REAL*8 tChanlpAlt
C End of new variables
      INTEGER IHEL,IDEN(NCROSS),IC(6,NCROSS)
      INTEGER IPROC,JC(6), I
      LOGICAL GOODHEL(NCOMB,NCROSS)
      INTEGER NGRAPHS
CNN      REAL*8 hwgt, xtot, xtry, xrej, xr, yfrac(0:ncomb)
CNN      INTEGER idum, ngood, igood(ncomb), jhel, j, jj
CNN      LOGICAL warned
CNN      REAL     xran1
CNN      EXTERNAL xran1
CNNC  
CNNC GLOBAL VARIABLES
CNNC  
CNN      Double Precision amp2(maxamps), jamp2(0:maxamps)
CNN      common/to_amps/  amp2,       jamp2
CNN
CNN      character*79         hel_buff
CNN      common/to_helicity/  hel_buff
CNN
CNN      REAL*8 POL(2)
CNN      common/to_polarization/ POL
CNN
CNN      integer          isum_hel
CNN      logical                    multi_channel
CNN      common/to_matrix/isum_hel, multi_channel
CNN      INTEGER MAPCONFIG(0:LMAXCONFIGS), ICONFIG
CNN      common/to_mconfigs/mapconfig, iconfig
CNN      DATA NTRY,IDUM /0,-1/
CNN      DATA xtry, xrej, ngood /0,0,0/
CNN      DATA warned, isum_hel/.false.,0/
CNN      DATA multi_channel/.true./
CNN      SAVE yfrac, igood, jhel
CNN      DATA NGRAPHS /    1/          
CNN      DATA jamp2(0) /   1/          
CNN      DATA GOODHEL/THEL*.FALSE./
      DATA (NHEL(IHEL,   1),IHEL=1, 6) /-1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,   2),IHEL=1, 6) /-1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,   3),IHEL=1, 6) /-1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,   4),IHEL=1, 6) /-1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,   5),IHEL=1, 6) /-1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,   6),IHEL=1, 6) /-1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,   7),IHEL=1, 6) /-1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,   8),IHEL=1, 6) /-1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,   9),IHEL=1, 6) /-1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  10),IHEL=1, 6) /-1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  11),IHEL=1, 6) /-1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  12),IHEL=1, 6) /-1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  13),IHEL=1, 6) /-1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  14),IHEL=1, 6) /-1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  15),IHEL=1, 6) /-1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  16),IHEL=1, 6) /-1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  17),IHEL=1, 6) /-1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  18),IHEL=1, 6) /-1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  19),IHEL=1, 6) /-1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  20),IHEL=1, 6) /-1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  21),IHEL=1, 6) /-1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  22),IHEL=1, 6) /-1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  23),IHEL=1, 6) /-1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  24),IHEL=1, 6) /-1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  25),IHEL=1, 6) /-1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  26),IHEL=1, 6) /-1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  27),IHEL=1, 6) /-1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  28),IHEL=1, 6) /-1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  29),IHEL=1, 6) /-1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  30),IHEL=1, 6) /-1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  31),IHEL=1, 6) /-1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  32),IHEL=1, 6) /-1, 1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  33),IHEL=1, 6) / 1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  34),IHEL=1, 6) / 1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  35),IHEL=1, 6) / 1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  36),IHEL=1, 6) / 1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  37),IHEL=1, 6) / 1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  38),IHEL=1, 6) / 1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  39),IHEL=1, 6) / 1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  40),IHEL=1, 6) / 1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  41),IHEL=1, 6) / 1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  42),IHEL=1, 6) / 1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  43),IHEL=1, 6) / 1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  44),IHEL=1, 6) / 1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  45),IHEL=1, 6) / 1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  46),IHEL=1, 6) / 1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  47),IHEL=1, 6) / 1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  48),IHEL=1, 6) / 1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  49),IHEL=1, 6) / 1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  50),IHEL=1, 6) / 1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  51),IHEL=1, 6) / 1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  52),IHEL=1, 6) / 1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  53),IHEL=1, 6) / 1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  54),IHEL=1, 6) / 1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  55),IHEL=1, 6) / 1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  56),IHEL=1, 6) / 1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  57),IHEL=1, 6) / 1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  58),IHEL=1, 6) / 1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  59),IHEL=1, 6) / 1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  60),IHEL=1, 6) / 1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  61),IHEL=1, 6) / 1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  62),IHEL=1, 6) / 1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  63),IHEL=1, 6) / 1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  64),IHEL=1, 6) / 1, 1, 1, 1, 1, 1/
      DATA (  IC(IHEL,  1),IHEL=1, 6) / 1, 2, 3, 4, 5, 6/
      DATA (IDEN(IHEL),IHEL=  1,  1) /  36/
C ----------
C BEGIN CODE
C ----------
C     ADDED ALL THESE LINES
      ANS(1) = 0D0
      PRINT *,"STARTING NCOMB=",NCOMB
      DO IHEL=1,NCOMB
        T= tChanlpAlt(P1, MW,NHEL(1,IHEL))		
        ANS(1)=ANS(1)+T
C        PRINT *,"IHEL= ", IHEL," T= ",T," ME=",ANS(1)," IDEN(1)= "
        IF (T .GT. 0) THEN 
           PRINT *," IHEL= ", IHEL," T= ",T," ME=",ANS(1)," IDEN(1)= ",
     & DBLE(IDEN(1))
	ENDIF
      ENDDO
      
      ANS(1)=ANS(1)/DBLE(IDEN(1))
C     END ADDED ALL THESE LINES

CNN     NTRY=NTRY+1
CNN     DO IPROC=1,NCROSS
CNN     CALL SWITCHMOM(P1,P,IC(1,IPROC),JC,6)
CNN     DO IHEL=1,6
CNN        JC(IHEL) = +1
CNN     ENDDO
CNN      
CNN     IF (multi_channel) THEN
CNN         DO IHEL=1,NGRAPHS
CNN             amp2(ihel)=0d0
CNN             jamp2(ihel)=0d0
CNN         ENDDO
CNN         DO IHEL=1,int(jamp2(0))
CNN             jamp2(ihel)=0d0
CNN         ENDDO
CNN     ENDIF
CNN     ANS(IPROC) = 0D0
CNN     write(hel_buff,'(16i5)') (0,i=1,nexternal)
CNN     IF (ISUM_HEL .EQ. 0 .OR. NTRY .LT. 10) THEN
CNN         DO IHEL=1,NCOMB
CNN            IF (GOODHEL(IHEL,IPROC) .OR. NTRY .LT. 2) THEN
CNN                T=MATRIX(P ,NHEL(1,IHEL),JC(1))            
CNN              DO JJ=1,nincoming
CNN                IF(POL(JJ).NE.1d0.AND.
CNN    &              NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
CNN                  T=T*ABS(POL(JJ))
CNN                ELSE IF(POL(JJ).NE.1d0)THEN
CNN                  T=T*(2d0-ABS(POL(JJ)))
CNN                ENDIF
CNN              ENDDO
CNN              ANS(IPROC)=ANS(IPROC)+T
CNN              IF (T .NE. 0D0 .AND. .NOT.    GOODHEL(IHEL,IPROC)) THEN
CNN                  GOODHEL(IHEL,IPROC)=.TRUE.
CNN                  NGOOD = NGOOD +1
CNN                  IGOOD(NGOOD) = IHEL
CNN              ENDIF
CNN            ENDIF
CNN         ENDDO
CNN         JHEL = 1
CNN         ISUM_HEL=MIN(ISUM_HEL,NGOOD)
CNN     ELSE              !RANDOM HELICITY
CNN         DO J=1,ISUM_HEL
CNN             JHEL=JHEL+1
CNN             IF (JHEL .GT. NGOOD) JHEL=1
CNN             HWGT = REAL(NGOOD)/REAL(ISUM_HEL)
CNN             IHEL = IGOOD(JHEL)
CNN             T=MATRIX(P ,NHEL(1,IHEL),JC(1))            
CNN             DO JJ=1,nincoming
CNN               IF(POL(JJ).NE.1d0.AND.
CNN    &             NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
CNN                 T=T*ABS(POL(JJ))
CNN               ELSE IF(POL(JJ).NE.1d0)THEN
CNN                 T=T*(2d0-ABS(POL(JJ)))
CNN               ENDIF
CNN             ENDDO
CNN             ANS(IPROC)=ANS(IPROC)+T*HWGT
CNN         ENDDO
CNN         IF (ISUM_HEL .EQ. 1) THEN
CNN             WRITE(HEL_BUFF,'(16i5)')(NHEL(i,IHEL),i=1,nexternal)
CNN         ENDIF
CNN     ENDIF
CNN     IF (MULTI_CHANNEL) THEN
CNN         XTOT=0D0
CNN         DO IHEL=1,MAPCONFIG(0)
CNN             XTOT=XTOT+AMP2(MAPCONFIG(IHEL))
CNN         ENDDO
CNN         IF (XTOT.NE.0D0) THEN
CNN             ANS(IPROC)=ANS(IPROC)*AMP2(MAPCONFIG(ICONFIG))/XTOT
CNN         ELSE
CNN             ANS(IPROC)=0D0
CNN         ENDIF
CNN     ENDIF
CNN     ANS(IPROC)=ANS(IPROC)/DBLE(IDEN(IPROC))
CNN     ENDDO
      END
       
       
      REAL*8 FUNCTION tChanlpAlt(P,MW,NHEL)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,6)
C  
C FOR PROCESS : b u -> b e+ ve d  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS,    NEIGEN 
      PARAMETER (NGRAPHS=   1,NEIGEN=  1) 
CNN      include "genps.inc"
CNN      include "nexternal.inc"
CNN      include "maxamps.inc"
      INTEGER    NWAVEFUNCS     , NCOLOR
      PARAMETER (NWAVEFUNCS=   9, NCOLOR=   1) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C     ADDED MULTILINES BELOW
      INTEGER  maxamps
      double precision  Pi, Fourpi, Rt2, gfermi
      parameter( Pi = 3.14159265358979323846d0 )
      parameter( Fourpi = 4.0d0  * Pi )
      parameter( Rt2   = 1.414213562d0 )
      parameter( gfermi = 1.16639d-5 )
      parameter (maxamps=2500)
C     END ADDED MULTILINES BELOW
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,6)
C     Added single line below
      REAL*8 MH, MZ, MW
      INTEGER NHEL(6), IC(6)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NGRAPHS), JAMP(NCOLOR)
      COMPLEX*16 W(18,NWAVEFUNCS)
C  
C GLOBAL VARIABLES
C  
      Double Precision amp2(maxamps), jamp2(0:maxamps)
      common/to_amps/  amp2,       jamp2
CNN      include "coupl.inc"
C  
C COLOR DATA
C  
      DATA Denom(1  )/            1/                                       
      DATA (CF(i,1  ),i=1  ,1  ) /     9/                                  
C               T[ 3, 1]T[ 6, 2] 
C     Added multi lines below
      double precision beamEnergy,bMass,cMass,wMass,wWidth,zMass,zWidth
      double precision tMass,tWidth,sin2w,alpha,ee2,ee,sw,cw,ez,ey
      double precision alphas,temp_gwf,temp_gg, temp_sgg,gzu1,gzu2
      double precision gzd1,gzd2,gzl1,gzl2,temp_gwwz,v,gwwh,ghbot
      double complex gwf(2),gg(2),sgg(2),gwwz(2),gzu(2),gzd(2),gzl(2)

      beamEnergy = 3500
      bMass = 4.7
      cMass = 1.4
      wMass = 80.419
      wWidth = 2.04759
      zMass = 91.118
      zWidth = 2.441
      tMass = 172.5
      tWidth = 1.46151
      sin2w = 0.2312
      gzu1 = -0.257674
      gzu2 = 0.114831
      gzd1 = 0.315089
      gzd2 = -0.0574153
      gzl1 = 0.200258
      gzl2 = -0.172246
      v = 783.896
      gwwh = 167.249
      ghbot = -0.00599569
      alphas = 0.13
      temp_gwf = -0.461905
      temp_gwwz = 0.572763
      temp_gg = -1.27813
      temp_sgg = 1.27813


      gwf(1) = dcmplx(temp_gwf, Zero)
      gwf(2) = dcmplx(Zero, Zero)
      gwwz(1) = dcmplx(temp_gwwz, Zero)
      gwwz(2) = dcmplx(Zero, Zero)
      gg(1) = dcmplx(temp_gg, Zero)
      gg(2) = dcmplx(temp_gg, Zero)
      sgg(1) = dcmplx(temp_sgg, Zero)
      sgg(2) = dcmplx(Zero, Zero)
      gzu(1) = dcmplx(gzu1, Zero)
      gzu(2) = dcmplx(gzu2, Zero)
      gzd(1) = dcmplx(gzd1, Zero)
      gzd(2) = dcmplx(gzd2, Zero)
      gzl(1) = dcmplx(gzl1, Zero)
      gzl(2) = dcmplx(gzl2, Zero)
      
CCC  Remove the IC
      CALL IXXXXX(P(0,1   ),BMASS ,NHEL(1   ),+1,W(1,1   ))       
      CALL IXXXXX(P(0,2   ),ZERO ,NHEL(2   ),+1,W(1,2   ))        
      CALL OXXXXX(P(0,3   ),BMASS ,NHEL(3   ),+1,W(1,3   ))       
      CALL IXXXXX(P(0,4   ),ZERO ,NHEL(4   ),-1,W(1,4   ))        
      CALL OXXXXX(P(0,5   ),ZERO ,NHEL(5   ),+1,W(1,5   ))        
      CALL OXXXXX(P(0,6   ),ZERO ,NHEL(6   ),+1,W(1,6   ))        
      CALL JIOXXX(W(1,4   ),W(1,5   ),GWF ,WMASS   ,WWIDTH  ,W(1,7   ))    
      CALL FVOXXX(W(1,3   ),W(1,7   ),GWF ,TMASS   ,TWIDTH  ,W(1,8   ))    
      CALL JIOXXX(W(1,1   ),W(1,8   ),GWF ,WMASS   ,WWIDTH  ,W(1,9   ))    
      CALL IOVXXX(W(1,2   ),W(1,6   ),W(1,9   ),GWF ,AMP(1   ))            
      JAMP(   1) = -AMP(   1)
      tChanlpAlt = 0.D0 
      DO I = 1, NCOLOR
          ZTEMP = (0.D0,0.D0)
          DO J = 1, NCOLOR
              ZTEMP = ZTEMP + CF(J,I)*JAMP(J)
          ENDDO
          tChanlpAlt =tChanlpAlt+ZTEMP*DCONJG(JAMP(I))/DENOM(I)   
      ENDDO
      Do I = 1, NGRAPHS
          amp2(i)=amp2(i)+amp(i)*dconjg(amp(i))
      Enddo
      Do I = 1, NCOLOR
          Jamp2(i)=Jamp2(i)+Jamp(i)*dconjg(Jamp(i))
      Enddo
C      CALL GAUGECHECK(JAMP,ZTEMP,EIGEN_VEC,EIGEN_VAL,NCOLOR,NEIGEN) 
      END
       

CCC ---------------------------------------------------------------------------------------------------------------
CCC ---------------------------------------------------------------------------------------------------------------
CCC ---------------------------------------------------------------------------------------------------------------

      SUBROUTINE tChanlmM(P1,MW,ANS)

C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,6)
C  
C FOR PROCESS : d b~ -> b~ e- ve~ u  
C  
C Crossing   1 is d b~ -> b~ e- ve~ u  
      IMPLICIT NONE
C  
C CONSTANTS
C  
CNN      Include "genps.inc"
CNN      Include "nexternal.inc"
CNN      Include "maxamps.inc"
      INTEGER                 NCOMB,     NCROSS         
      PARAMETER (             NCOMB=  64, NCROSS=  1)
CNN      INTEGER    THEL
CNN      PARAMETER (THEL=NCOMB*NCROSS)
C  
C ARGUMENTS 
C  
      REAL*8 P1(0:3,6),ANS(NCROSS)
C  
C LOCAL VARIABLES 
C  
      INTEGER NHEL(6,NCOMB),NTRY
      REAL*8 T, P(0:3,6)
      REAL*8 MATRIX
C Include the new variables
      REAL*8 MW
      REAL*8 MZ
      REAL*8 tChanlm
C End of new variables
      INTEGER IHEL,IDEN(NCROSS),IC(6,NCROSS)
      INTEGER IPROC,JC(6), I
      LOGICAL GOODHEL(NCOMB,NCROSS)
      INTEGER NGRAPHS
CNN      REAL*8 hwgt, xtot, xtry, xrej, xr, yfrac(0:ncomb)
CNN      INTEGER idum, ngood, igood(ncomb), jhel, j, jj
CNN      LOGICAL warned
CNN      REAL     xran1
CNN      EXTERNAL xran1
CNNC  
CNNC GLOBAL VARIABLES
CNNC  
CNN      Double Precision amp2(maxamps), jamp2(0:maxamps)
CNN      common/to_amps/  amp2,       jamp2
CNN
CNN      character*79         hel_buff
CNN      common/to_helicity/  hel_buff
CNN
CNN      REAL*8 POL(2)
CNN      common/to_polarization/ POL
CNN
CNN      integer          isum_hel
CNN      logical                    multi_channel
CNN      common/to_matrix/isum_hel, multi_channel
CNN      INTEGER MAPCONFIG(0:LMAXCONFIGS), ICONFIG
CNN      common/to_mconfigs/mapconfig, iconfig
CNN      DATA NTRY,IDUM /0,-1/
CNN      DATA xtry, xrej, ngood /0,0,0/
CNN      DATA warned, isum_hel/.false.,0/
CNN      DATA multi_channel/.true./
CNN      SAVE yfrac, igood, jhel
CNN      DATA NGRAPHS /    1/          
CNN      DATA jamp2(0) /   1/          
CNN      DATA GOODHEL/THEL*.FALSE./
      DATA (NHEL(IHEL,   1),IHEL=1, 6) /-1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,   2),IHEL=1, 6) /-1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,   3),IHEL=1, 6) /-1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,   4),IHEL=1, 6) /-1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,   5),IHEL=1, 6) /-1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,   6),IHEL=1, 6) /-1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,   7),IHEL=1, 6) /-1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,   8),IHEL=1, 6) /-1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,   9),IHEL=1, 6) /-1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  10),IHEL=1, 6) /-1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  11),IHEL=1, 6) /-1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  12),IHEL=1, 6) /-1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  13),IHEL=1, 6) /-1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  14),IHEL=1, 6) /-1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  15),IHEL=1, 6) /-1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  16),IHEL=1, 6) /-1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  17),IHEL=1, 6) /-1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  18),IHEL=1, 6) /-1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  19),IHEL=1, 6) /-1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  20),IHEL=1, 6) /-1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  21),IHEL=1, 6) /-1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  22),IHEL=1, 6) /-1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  23),IHEL=1, 6) /-1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  24),IHEL=1, 6) /-1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  25),IHEL=1, 6) /-1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  26),IHEL=1, 6) /-1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  27),IHEL=1, 6) /-1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  28),IHEL=1, 6) /-1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  29),IHEL=1, 6) /-1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  30),IHEL=1, 6) /-1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  31),IHEL=1, 6) /-1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  32),IHEL=1, 6) /-1, 1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  33),IHEL=1, 6) / 1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  34),IHEL=1, 6) / 1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  35),IHEL=1, 6) / 1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  36),IHEL=1, 6) / 1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  37),IHEL=1, 6) / 1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  38),IHEL=1, 6) / 1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  39),IHEL=1, 6) / 1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  40),IHEL=1, 6) / 1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  41),IHEL=1, 6) / 1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  42),IHEL=1, 6) / 1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  43),IHEL=1, 6) / 1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  44),IHEL=1, 6) / 1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  45),IHEL=1, 6) / 1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  46),IHEL=1, 6) / 1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  47),IHEL=1, 6) / 1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  48),IHEL=1, 6) / 1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  49),IHEL=1, 6) / 1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  50),IHEL=1, 6) / 1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  51),IHEL=1, 6) / 1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  52),IHEL=1, 6) / 1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  53),IHEL=1, 6) / 1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  54),IHEL=1, 6) / 1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  55),IHEL=1, 6) / 1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  56),IHEL=1, 6) / 1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  57),IHEL=1, 6) / 1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  58),IHEL=1, 6) / 1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  59),IHEL=1, 6) / 1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  60),IHEL=1, 6) / 1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  61),IHEL=1, 6) / 1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  62),IHEL=1, 6) / 1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  63),IHEL=1, 6) / 1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  64),IHEL=1, 6) / 1, 1, 1, 1, 1, 1/
      DATA (  IC(IHEL,  1),IHEL=1, 6) / 1, 2, 3, 4, 5, 6/
      DATA (IDEN(IHEL),IHEL=  1,  1) /  36/
C ----------
C BEGIN CODE
C ----------
C     ADDED ALL THESE LINES
      ANS(1) = 0D0
      PRINT *,"STARTING NCOMB=",NCOMB
      DO IHEL=1,NCOMB
        T= tChanlm(P1, MW,NHEL(1,IHEL))		
        ANS(1)=ANS(1)+T
C        PRINT *,"IHEL= ", IHEL," T= ",T," ME=",ANS(1)," IDEN(1)= "
        IF (T .GT. 0) THEN 
           PRINT *," IHEL= ", IHEL," T= ",T," ME=",ANS(1)," IDEN(1)= ",
     & DBLE(IDEN(1))
	ENDIF
      ENDDO
      
      ANS(1)=ANS(1)/DBLE(IDEN(1))
C     END ADDED ALL THESE LINES

CNN      NTRY=NTRY+1
CNN      DO IPROC=1,NCROSS
CNN      CALL SWITCHMOM(P1,P,IC(1,IPROC),JC,6)
CNN      DO IHEL=1,6
CNN         JC(IHEL) = +1
CNN      ENDDO
CNN       
CNN      IF (multi_channel) THEN
CNN          DO IHEL=1,NGRAPHS
CNN              amp2(ihel)=0d0
CNN              jamp2(ihel)=0d0
CNN          ENDDO
CNN          DO IHEL=1,int(jamp2(0))
CNN              jamp2(ihel)=0d0
CNN          ENDDO
CNN      ENDIF
CNN      ANS(IPROC) = 0D0
CNN      write(hel_buff,'(16i5)') (0,i=1,nexternal)
CNN      IF (ISUM_HEL .EQ. 0 .OR. NTRY .LT. 10) THEN
CNN          DO IHEL=1,NCOMB
CNN             IF (GOODHEL(IHEL,IPROC) .OR. NTRY .LT. 2) THEN
CNN                 T=MATRIX(P ,NHEL(1,IHEL),JC(1))            
CNN               DO JJ=1,nincoming
CNN                 IF(POL(JJ).NE.1d0.AND.
CNN     &              NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
CNN                   T=T*ABS(POL(JJ))
CNN                 ELSE IF(POL(JJ).NE.1d0)THEN
CNN                   T=T*(2d0-ABS(POL(JJ)))
CNN                 ENDIF
CNN               ENDDO
CNN               ANS(IPROC)=ANS(IPROC)+T
CNN               IF (T .NE. 0D0 .AND. .NOT.    GOODHEL(IHEL,IPROC)) THEN
CNN                   GOODHEL(IHEL,IPROC)=.TRUE.
CNN                   NGOOD = NGOOD +1
CNN                   IGOOD(NGOOD) = IHEL
CNN               ENDIF
CNN             ENDIF
CNN          ENDDO
CNN          JHEL = 1
CNN          ISUM_HEL=MIN(ISUM_HEL,NGOOD)
CNN      ELSE              !RANDOM HELICITY
CNN          DO J=1,ISUM_HEL
CNN              JHEL=JHEL+1
CNN              IF (JHEL .GT. NGOOD) JHEL=1
CNN              HWGT = REAL(NGOOD)/REAL(ISUM_HEL)
CNN              IHEL = IGOOD(JHEL)
CNN              T=MATRIX(P ,NHEL(1,IHEL),JC(1))            
CNN              DO JJ=1,nincoming
CNN                IF(POL(JJ).NE.1d0.AND.
CNN     &             NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
CNN                  T=T*ABS(POL(JJ))
CNN                ELSE IF(POL(JJ).NE.1d0)THEN
CNN                  T=T*(2d0-ABS(POL(JJ)))
CNN                ENDIF
CNN              ENDDO
CNN              ANS(IPROC)=ANS(IPROC)+T*HWGT
CNN          ENDDO
CNN          IF (ISUM_HEL .EQ. 1) THEN
CNN              WRITE(HEL_BUFF,'(16i5)')(NHEL(i,IHEL),i=1,nexternal)
CNN          ENDIF
CNN      ENDIF
CNN      IF (MULTI_CHANNEL) THEN
CNN          XTOT=0D0
CNN          DO IHEL=1,MAPCONFIG(0)
CNN              XTOT=XTOT+AMP2(MAPCONFIG(IHEL))
CNN          ENDDO
CNN          IF (XTOT.NE.0D0) THEN
CNN              ANS(IPROC)=ANS(IPROC)*AMP2(MAPCONFIG(ICONFIG))/XTOT
CNN          ELSE
CNN              ANS(IPROC)=0D0
CNN          ENDIF
CNN      ENDIF
CNN      ANS(IPROC)=ANS(IPROC)/DBLE(IDEN(IPROC))
CNN      ENDDO
      END
       
      REAL*8 FUNCTION tChanlm(P,MW,NHEL)       

C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,6)
C  
C FOR PROCESS : d b~ -> b~ e- ve~ u  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS,    NEIGEN 
      PARAMETER (NGRAPHS=   1,NEIGEN=  1) 
CNN      include "genps.inc"
CNN      include "nexternal.inc"
CNN      include "maxamps.inc"
      INTEGER    NWAVEFUNCS     , NCOLOR
      PARAMETER (NWAVEFUNCS=   9, NCOLOR=   1) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C     ADDED MULTILINES BELOW
      INTEGER  maxamps
      double precision  Pi, Fourpi, Rt2, gfermi
      parameter( Pi = 3.14159265358979323846d0 )
      parameter( Fourpi = 4.0d0  * Pi )
      parameter( Rt2   = 1.414213562d0 )
      parameter( gfermi = 1.16639d-5 )
      parameter (maxamps=2500)
C     END ADDED MULTILINES BELOW
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,6)
C     Added single line below
      REAL*8 MH, MZ, MW
      INTEGER NHEL(6), IC(6)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NGRAPHS), JAMP(NCOLOR)
      COMPLEX*16 W(18,NWAVEFUNCS)
C  
C GLOBAL VARIABLES
C  
      Double Precision amp2(maxamps), jamp2(0:maxamps)
      common/to_amps/  amp2,       jamp2
CNN      include "coupl.inc"
C  
C COLOR DATA
C  
      DATA Denom(1  )/            1/                                       
      DATA (CF(i,1  ),i=1  ,1  ) /     9/                                  
C               T[ 2, 3]T[ 6, 1]  
C     Added multi lines below
      double precision beamEnergy,bMass,cMass,wMass,wWidth,zMass,zWidth
      double precision tMass,tWidth,sin2w,alpha,ee2,ee,sw,cw,ez,ey
      double precision alphas,temp_gwf,temp_gg, temp_sgg,gzu1,gzu2
      double precision gzd1,gzd2,gzl1,gzl2,temp_gwwz,v,gwwh,ghbot
      double complex gwf(2),gg(2),sgg(2),gwwz(2),gzu(2),gzd(2),gzl(2)

      beamEnergy = 3500
      bMass = 4.7
      cMass = 1.4
      wMass = 80.419
      wWidth = 2.04759
      zMass = 91.118
      zWidth = 2.441
      tMass = 172.5
      tWidth = 1.46151
      sin2w = 0.2312
      gzu1 = -0.257674
      gzu2 = 0.114831
      gzd1 = 0.315089
      gzd2 = -0.0574153
      gzl1 = 0.200258
      gzl2 = -0.172246
      v = 783.896
      gwwh = 167.249
      ghbot = -0.00599569
      alphas = 0.13
      temp_gwf = -0.461905
      temp_gwwz = 0.572763
      temp_gg = -1.27813
      temp_sgg = 1.27813


      gwf(1) = dcmplx(temp_gwf, Zero)
      gwf(2) = dcmplx(Zero, Zero)
      gwwz(1) = dcmplx(temp_gwwz, Zero)
      gwwz(2) = dcmplx(Zero, Zero)
      gg(1) = dcmplx(temp_gg, Zero)
      gg(2) = dcmplx(temp_gg, Zero)
      sgg(1) = dcmplx(temp_sgg, Zero)
      sgg(2) = dcmplx(Zero, Zero)
      gzu(1) = dcmplx(gzu1, Zero)
      gzu(2) = dcmplx(gzu2, Zero)
      gzd(1) = dcmplx(gzd1, Zero)
      gzd(2) = dcmplx(gzd2, Zero)
      gzl(1) = dcmplx(gzl1, Zero)
      gzl(2) = dcmplx(gzl2, Zero)

      
CCC  Remove the IC
      CALL IXXXXX(P(0,1   ),ZERO ,NHEL(1   ),+1,W(1,1   ))        
      CALL OXXXXX(P(0,2   ),BMASS ,NHEL(2   ),-1,W(1,2   ))       
      CALL IXXXXX(P(0,3   ),BMASS ,NHEL(3   ),-1,W(1,3   ))       
      CALL OXXXXX(P(0,4   ),ZERO ,NHEL(4   ),+1,W(1,4   ))        
      CALL IXXXXX(P(0,5   ),ZERO ,NHEL(5   ),-1,W(1,5   ))        
      CALL OXXXXX(P(0,6   ),ZERO ,NHEL(6   ),+1,W(1,6   ))        
      CALL JIOXXX(W(1,5   ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,7   ))    
      CALL FVIXXX(W(1,3   ),W(1,7   ),GWF ,TMASS   ,TWIDTH  ,W(1,8   ))    
      CALL JIOXXX(W(1,8   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,9   ))    
      CALL IOVXXX(W(1,1   ),W(1,6   ),W(1,9   ),GWF ,AMP(1   ))            
      JAMP(   1) = +AMP(   1)
      tChanlm = 0.D0 
      DO I = 1, NCOLOR
          ZTEMP = (0.D0,0.D0)
          DO J = 1, NCOLOR
              ZTEMP = ZTEMP + CF(J,I)*JAMP(J)
          ENDDO
          tChanlm =tChanlm+ZTEMP*DCONJG(JAMP(I))/DENOM(I)   
      ENDDO
      Do I = 1, NGRAPHS
          amp2(i)=amp2(i)+amp(i)*dconjg(amp(i))
      Enddo
      Do I = 1, NCOLOR
          Jamp2(i)=Jamp2(i)+Jamp(i)*dconjg(Jamp(i))
      Enddo
C      CALL GAUGECHECK(JAMP,ZTEMP,EIGEN_VEC,EIGEN_VAL,NCOLOR,NEIGEN) 
      END
       

CCC ---------------------------------------------------------------------------------------------------------------
CCC ---------------------------------------------------------------------------------------------------------------
CCC ---------------------------------------------------------------------------------------------------------------

      SUBROUTINE tChanlmAltM(P1,MW,ANS)

C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,6)
C  
C FOR PROCESS : b~ d -> b~ e- ve~ u  
C  
C Crossing   1 is b~ d -> b~ e- ve~ u  
      IMPLICIT NONE
C  
C CONSTANTS
C  
CNN      Include "genps.inc"
CNN      Include "nexternal.inc"
CNN      Include "maxamps.inc"
      INTEGER                 NCOMB,     NCROSS         
      PARAMETER (             NCOMB=  64, NCROSS=  1)
CNN      INTEGER    THEL
CNN      PARAMETER (THEL=NCOMB*NCROSS)
C  
C ARGUMENTS 
C  
      REAL*8 P1(0:3,6),ANS(NCROSS)
C  
C LOCAL VARIABLES 
C  
      INTEGER NHEL(6,NCOMB),NTRY
      REAL*8 T, P(0:3,6)
      REAL*8 MATRIX
C Include the new variables
      REAL*8 MW
      REAL*8 MZ
      REAL*8 tChanlmAlt
C End of new variables
      INTEGER IHEL,IDEN(NCROSS),IC(6,NCROSS)
      INTEGER IPROC,JC(6), I
      LOGICAL GOODHEL(NCOMB,NCROSS)
      INTEGER NGRAPHS
CNN      REAL*8 hwgt, xtot, xtry, xrej, xr, yfrac(0:ncomb)
CNN      INTEGER idum, ngood, igood(ncomb), jhel, j, jj
CNN      LOGICAL warned
CNN      REAL     xran1
CNN      EXTERNAL xran1
CNNC  
CNNC GLOBAL VARIABLES
CNNC  
CNN      Double Precision amp2(maxamps), jamp2(0:maxamps)
CNN      common/to_amps/  amp2,       jamp2
CNN
CNN      character*79         hel_buff
CNN      common/to_helicity/  hel_buff
CNN
CNN      REAL*8 POL(2)
CNN      common/to_polarization/ POL
CNN
CNN      integer          isum_hel
CNN      logical                    multi_channel
CNN      common/to_matrix/isum_hel, multi_channel
CNN      INTEGER MAPCONFIG(0:LMAXCONFIGS), ICONFIG
CNN      common/to_mconfigs/mapconfig, iconfig
CNN      DATA NTRY,IDUM /0,-1/
CNN      DATA xtry, xrej, ngood /0,0,0/
CNN      DATA warned, isum_hel/.false.,0/
CNN      DATA multi_channel/.true./
CNN      SAVE yfrac, igood, jhel
CNN      DATA NGRAPHS /    1/          
CNN      DATA jamp2(0) /   1/          
CNN      DATA GOODHEL/THEL*.FALSE./
      DATA (NHEL(IHEL,   1),IHEL=1, 6) /-1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,   2),IHEL=1, 6) /-1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,   3),IHEL=1, 6) /-1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,   4),IHEL=1, 6) /-1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,   5),IHEL=1, 6) /-1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,   6),IHEL=1, 6) /-1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,   7),IHEL=1, 6) /-1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,   8),IHEL=1, 6) /-1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,   9),IHEL=1, 6) /-1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  10),IHEL=1, 6) /-1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  11),IHEL=1, 6) /-1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  12),IHEL=1, 6) /-1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  13),IHEL=1, 6) /-1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  14),IHEL=1, 6) /-1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  15),IHEL=1, 6) /-1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  16),IHEL=1, 6) /-1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  17),IHEL=1, 6) /-1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  18),IHEL=1, 6) /-1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  19),IHEL=1, 6) /-1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  20),IHEL=1, 6) /-1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  21),IHEL=1, 6) /-1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  22),IHEL=1, 6) /-1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  23),IHEL=1, 6) /-1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  24),IHEL=1, 6) /-1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  25),IHEL=1, 6) /-1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  26),IHEL=1, 6) /-1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  27),IHEL=1, 6) /-1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  28),IHEL=1, 6) /-1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  29),IHEL=1, 6) /-1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  30),IHEL=1, 6) /-1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  31),IHEL=1, 6) /-1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  32),IHEL=1, 6) /-1, 1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  33),IHEL=1, 6) / 1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  34),IHEL=1, 6) / 1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  35),IHEL=1, 6) / 1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  36),IHEL=1, 6) / 1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  37),IHEL=1, 6) / 1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  38),IHEL=1, 6) / 1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  39),IHEL=1, 6) / 1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  40),IHEL=1, 6) / 1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  41),IHEL=1, 6) / 1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  42),IHEL=1, 6) / 1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  43),IHEL=1, 6) / 1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  44),IHEL=1, 6) / 1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  45),IHEL=1, 6) / 1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  46),IHEL=1, 6) / 1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  47),IHEL=1, 6) / 1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  48),IHEL=1, 6) / 1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  49),IHEL=1, 6) / 1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  50),IHEL=1, 6) / 1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  51),IHEL=1, 6) / 1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  52),IHEL=1, 6) / 1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  53),IHEL=1, 6) / 1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  54),IHEL=1, 6) / 1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  55),IHEL=1, 6) / 1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  56),IHEL=1, 6) / 1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  57),IHEL=1, 6) / 1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  58),IHEL=1, 6) / 1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  59),IHEL=1, 6) / 1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  60),IHEL=1, 6) / 1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  61),IHEL=1, 6) / 1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  62),IHEL=1, 6) / 1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  63),IHEL=1, 6) / 1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  64),IHEL=1, 6) / 1, 1, 1, 1, 1, 1/
      DATA (  IC(IHEL,  1),IHEL=1, 6) / 1, 2, 3, 4, 5, 6/
      DATA (IDEN(IHEL),IHEL=  1,  1) /  36/
C ----------
C BEGIN CODE
C ----------
C     ADDED ALL THESE LINES
      ANS(1) = 0D0
      PRINT *,"STARTING NCOMB=",NCOMB
      DO IHEL=1,NCOMB
        T= tChanlmAlt(P1, MW,NHEL(1,IHEL))		
        ANS(1)=ANS(1)+T
C        PRINT *,"IHEL= ", IHEL," T= ",T," ME=",ANS(1)," IDEN(1)= "
        IF (T .GT. 0) THEN 
           PRINT *," IHEL= ", IHEL," T= ",T," ME=",ANS(1)," IDEN(1)= ",
     & DBLE(IDEN(1))
	ENDIF
      ENDDO
      
      ANS(1)=ANS(1)/DBLE(IDEN(1))
C     END ADDED ALL THESE LINES

CNN      NTRY=NTRY+1
CNN      DO IPROC=1,NCROSS
CNN      CALL SWITCHMOM(P1,P,IC(1,IPROC),JC,6)
CNN      DO IHEL=1,6
CNN         JC(IHEL) = +1
CNN      ENDDO
CNN       
CNN      IF (multi_channel) THEN
CNN          DO IHEL=1,NGRAPHS
CNN              amp2(ihel)=0d0
CNN              jamp2(ihel)=0d0
CNN          ENDDO
CNN          DO IHEL=1,int(jamp2(0))
CNN              jamp2(ihel)=0d0
CNN          ENDDO
CNN      ENDIF
CNN      ANS(IPROC) = 0D0
CNN      write(hel_buff,'(16i5)') (0,i=1,nexternal)
CNN      IF (ISUM_HEL .EQ. 0 .OR. NTRY .LT. 10) THEN
CNN          DO IHEL=1,NCOMB
CNN             IF (GOODHEL(IHEL,IPROC) .OR. NTRY .LT. 2) THEN
CNN                 T=MATRIX(P ,NHEL(1,IHEL),JC(1))            
CNN               DO JJ=1,nincoming
CNN                 IF(POL(JJ).NE.1d0.AND.
CNN     &              NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
CNN                   T=T*ABS(POL(JJ))
CNN                 ELSE IF(POL(JJ).NE.1d0)THEN
CNN                   T=T*(2d0-ABS(POL(JJ)))
CNN                 ENDIF
CNN               ENDDO
CNN               ANS(IPROC)=ANS(IPROC)+T
CNN               IF (T .NE. 0D0 .AND. .NOT.    GOODHEL(IHEL,IPROC)) THEN
CNN                   GOODHEL(IHEL,IPROC)=.TRUE.
CNN                   NGOOD = NGOOD +1
CNN                   IGOOD(NGOOD) = IHEL
CNN               ENDIF
CNN             ENDIF
CNN          ENDDO
CNN          JHEL = 1
CNN          ISUM_HEL=MIN(ISUM_HEL,NGOOD)
CNN      ELSE              !RANDOM HELICITY
CNN          DO J=1,ISUM_HEL
CNN              JHEL=JHEL+1
CNN              IF (JHEL .GT. NGOOD) JHEL=1
CNN              HWGT = REAL(NGOOD)/REAL(ISUM_HEL)
CNN              IHEL = IGOOD(JHEL)
CNN              T=MATRIX(P ,NHEL(1,IHEL),JC(1))            
CNN              DO JJ=1,nincoming
CNN                IF(POL(JJ).NE.1d0.AND.
CNN     &             NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
CNN                  T=T*ABS(POL(JJ))
CNN                ELSE IF(POL(JJ).NE.1d0)THEN
CNN                  T=T*(2d0-ABS(POL(JJ)))
CNN                ENDIF
CNN              ENDDO
CNN              ANS(IPROC)=ANS(IPROC)+T*HWGT
CNN          ENDDO
CNN          IF (ISUM_HEL .EQ. 1) THEN
CNN              WRITE(HEL_BUFF,'(16i5)')(NHEL(i,IHEL),i=1,nexternal)
CNN          ENDIF
CNN      ENDIF
CNN      IF (MULTI_CHANNEL) THEN
CNN          XTOT=0D0
CNN          DO IHEL=1,MAPCONFIG(0)
CNN              XTOT=XTOT+AMP2(MAPCONFIG(IHEL))
CNN          ENDDO
CNN          IF (XTOT.NE.0D0) THEN
CNN              ANS(IPROC)=ANS(IPROC)*AMP2(MAPCONFIG(ICONFIG))/XTOT
CNN          ELSE
CNN              ANS(IPROC)=0D0
CNN          ENDIF
CNN      ENDIF
CNN      ANS(IPROC)=ANS(IPROC)/DBLE(IDEN(IPROC))
CNN      ENDDO
      END
       
       
      REAL*8 FUNCTION tChanlmAlt(P,MW,NHEL)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,6)
C  
C FOR PROCESS : b~ d -> b~ e- ve~ u  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS,    NEIGEN 
      PARAMETER (NGRAPHS=   1,NEIGEN=  1) 
CNN      include "genps.inc"
CNN      include "nexternal.inc"
CNN      include "maxamps.inc"
      INTEGER    NWAVEFUNCS     , NCOLOR
      PARAMETER (NWAVEFUNCS=   9, NCOLOR=   1) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C     ADDED MULTILINES BELOW
      INTEGER  maxamps
      double precision  Pi, Fourpi, Rt2, gfermi
      parameter( Pi = 3.14159265358979323846d0 )
      parameter( Fourpi = 4.0d0  * Pi )
      parameter( Rt2   = 1.414213562d0 )
      parameter( gfermi = 1.16639d-5 )
      parameter (maxamps=2500)
C     END ADDED MULTILINES BELOW
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,6)
C     Added single line below
      REAL*8 MH, MZ, MW
      INTEGER NHEL(6), IC(6)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NGRAPHS), JAMP(NCOLOR)
      COMPLEX*16 W(18,NWAVEFUNCS)
C  
C GLOBAL VARIABLES
C  
      Double Precision amp2(maxamps), jamp2(0:maxamps)
      common/to_amps/  amp2,       jamp2
CNN      include "coupl.inc"
C  
C COLOR DATA
C  
      DATA Denom(1  )/            1/                                       
      DATA (CF(i,1  ),i=1  ,1  ) /     9/                                  
C               T[ 1, 3]T[ 6, 2] 
C     Added multi lines below
      double precision beamEnergy,bMass,cMass,wMass,wWidth,zMass,zWidth
      double precision tMass,tWidth,sin2w,alpha,ee2,ee,sw,cw,ez,ey
      double precision alphas,temp_gwf,temp_gg, temp_sgg,gzu1,gzu2
      double precision gzd1,gzd2,gzl1,gzl2,temp_gwwz,v,gwwh,ghbot
      double complex gwf(2),gg(2),sgg(2),gwwz(2),gzu(2),gzd(2),gzl(2)

      beamEnergy = 3500
      bMass = 4.7
      cMass = 1.4
      wMass = 80.419
      wWidth = 2.04759
      zMass = 91.118
      zWidth = 2.441
      tMass = 172.5
      tWidth = 1.46151
      sin2w = 0.2312
      gzu1 = -0.257674
      gzu2 = 0.114831
      gzd1 = 0.315089
      gzd2 = -0.0574153
      gzl1 = 0.200258
      gzl2 = -0.172246
      v = 783.896
      gwwh = 167.249
      ghbot = -0.00599569
      alphas = 0.13
      temp_gwf = -0.461905
      temp_gwwz = 0.572763
      temp_gg = -1.27813
      temp_sgg = 1.27813


      gwf(1) = dcmplx(temp_gwf, Zero)
      gwf(2) = dcmplx(Zero, Zero)
      gwwz(1) = dcmplx(temp_gwwz, Zero)
      gwwz(2) = dcmplx(Zero, Zero)
      gg(1) = dcmplx(temp_gg, Zero)
      gg(2) = dcmplx(temp_gg, Zero)
      sgg(1) = dcmplx(temp_sgg, Zero)
      sgg(2) = dcmplx(Zero, Zero)
      gzu(1) = dcmplx(gzu1, Zero)
      gzu(2) = dcmplx(gzu2, Zero)
      gzd(1) = dcmplx(gzd1, Zero)
      gzd(2) = dcmplx(gzd2, Zero)
      gzl(1) = dcmplx(gzl1, Zero)
      gzl(2) = dcmplx(gzl2, Zero)
      
CCC  Remove the IC
      CALL OXXXXX(P(0,1   ),BMASS ,NHEL(1   ),-1,W(1,1   ))       
      CALL IXXXXX(P(0,2   ),ZERO ,NHEL(2   ),+1,W(1,2   ))        
      CALL IXXXXX(P(0,3   ),BMASS ,NHEL(3   ),-1,W(1,3   ))       
      CALL OXXXXX(P(0,4   ),ZERO ,NHEL(4   ),+1,W(1,4   ))        
      CALL IXXXXX(P(0,5   ),ZERO ,NHEL(5   ),-1,W(1,5   ))        
      CALL OXXXXX(P(0,6   ),ZERO ,NHEL(6   ),+1,W(1,6   ))        
      CALL JIOXXX(W(1,5   ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,7   ))    
      CALL FVIXXX(W(1,3   ),W(1,7   ),GWF ,TMASS   ,TWIDTH  ,W(1,8   ))    
      CALL JIOXXX(W(1,8   ),W(1,1   ),GWF ,WMASS   ,WWIDTH  ,W(1,9   ))    
      CALL IOVXXX(W(1,2   ),W(1,6   ),W(1,9   ),GWF ,AMP(1   ))            
      JAMP(   1) = -AMP(   1)
      tChanlmAlt = 0.D0 
      DO I = 1, NCOLOR
          ZTEMP = (0.D0,0.D0)
          DO J = 1, NCOLOR
              ZTEMP = ZTEMP + CF(J,I)*JAMP(J)
          ENDDO
          tChanlmAlt =tChanlmAlt+ZTEMP*DCONJG(JAMP(I))/DENOM(I)   
      ENDDO
      Do I = 1, NGRAPHS
          amp2(i)=amp2(i)+amp(i)*dconjg(amp(i))
      Enddo
      Do I = 1, NCOLOR
          Jamp2(i)=Jamp2(i)+Jamp(i)*dconjg(Jamp(i))
      Enddo
C      CALL GAUGECHECK(JAMP,ZTEMP,EIGEN_VEC,EIGEN_VAL,NCOLOR,NEIGEN) 
      END
       

