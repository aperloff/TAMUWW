
      SUBROUTINE WWlpM(P1,MZ,MW,ANS)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,NEXTERNAL)
C  
C FOR PROCESS : u u~ -> e+ ve u~ d  
C  
C Crossing   1 is u u~ -> e+ ve u~ d  
      IMPLICIT NONE
C  
C CONSTANTS
C  
C     NN      Include "genps.inc"
C     NN      Include "nexternal.inc"
C     NN      Include "maxamps.inc"
      INTEGER                 NCOMB,     NCROSS         
      PARAMETER (             NCOMB=  64, NCROSS=  1)
C     NN      INTEGER    THEL
C     NN      PARAMETER (THEL=NCOMB*NCROSS)
C  
C ARGUMENTS 
C  
      REAL*8 P1(0:3,6),ANS(NCROSS)
C  
C LOCAL VARIABLES 
C  
      INTEGER NHEL(6,NCOMB),NTRY
      REAL*8 T, P(0:3,6)
C Include the new variables
      REAL*8 MW
      REAL*8 MZ
      REAL*8 WWlp
C End of new variables
      INTEGER IHEL,IDEN(NCROSS),IC(6,NCROSS)
      INTEGER IPROC,JC(6), I
      LOGICAL GOODHEL(NCOMB,NCROSS)
      INTEGER NGRAPHS
C     NN      REAL*8 hwgt, xtot, xtry, xrej, xr, yfrac(0:ncomb)
C     NN      INTEGER idum, ngood, igood(ncomb), jhel, j, jj
C     NN      LOGICAL warned
C     NN      REAL     xran1
C     NN      EXTERNAL xran1
C  
C GLOBAL VARIABLES
C  
C     NN       Double Precision amp2(maxamps), jamp2(0:maxamps)
C     NN       common/to_amps/  amp2,       jamp2
C     NN 
C     NN       character*79         hel_buff
C     NN       common/to_helicity/  hel_buff
C     NN 
C     NN       REAL*8 POL(2)
C     NN       common/to_polarization/ POL
C     NN
C     NN      integer          isum_hel
C     NN      logical                    multi_channel
C     NN      common/to_matrix/isum_hel, multi_channel
C     NN      INTEGER MAPCONFIG(0:LMAXCONFIGS), ICONFIG
C     NN      common/to_mconfigs/mapconfig, iconfig
C     NN      DATA NTRY,IDUM /0,-1/
C     NN      DATA xtry, xrej, ngood /0,0,0/
C     NN      DATA warned, isum_hel/.false.,0/
C     NN      DATA multi_channel/.true./
C     NN      SAVE yfrac, igood, jhel
C     NN      DATA NGRAPHS /    3/           
C     NN      DATA jamp2(0) /   1/          
C     NN      DATA GOODHEL/THEL*.FALSE./
      DATA (NHEL(IHEL,   1),IHEL=1, 6) /-1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,   2),IHEL=1, 6) /-1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,   3),IHEL=1, 6) /-1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,   4),IHEL=1, 6) /-1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,   5),IHEL=1, 6) /-1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,   6),IHEL=1, 6) /-1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,   7),IHEL=1, 6) /-1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,   8),IHEL=1, 6) /-1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,   9),IHEL=1, 6) /-1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  10),IHEL=1, 6) /-1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  11),IHEL=1, 6) /-1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  12),IHEL=1, 6) /-1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  13),IHEL=1, 6) /-1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  14),IHEL=1, 6) /-1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  15),IHEL=1, 6) /-1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  16),IHEL=1, 6) /-1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  17),IHEL=1, 6) /-1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  18),IHEL=1, 6) /-1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  19),IHEL=1, 6) /-1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  20),IHEL=1, 6) /-1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  21),IHEL=1, 6) /-1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  22),IHEL=1, 6) /-1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  23),IHEL=1, 6) /-1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  24),IHEL=1, 6) /-1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  25),IHEL=1, 6) /-1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  26),IHEL=1, 6) /-1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  27),IHEL=1, 6) /-1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  28),IHEL=1, 6) /-1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  29),IHEL=1, 6) /-1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  30),IHEL=1, 6) /-1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  31),IHEL=1, 6) /-1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  32),IHEL=1, 6) /-1, 1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  33),IHEL=1, 6) / 1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  34),IHEL=1, 6) / 1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  35),IHEL=1, 6) / 1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  36),IHEL=1, 6) / 1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  37),IHEL=1, 6) / 1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  38),IHEL=1, 6) / 1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  39),IHEL=1, 6) / 1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  40),IHEL=1, 6) / 1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  41),IHEL=1, 6) / 1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  42),IHEL=1, 6) / 1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  43),IHEL=1, 6) / 1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  44),IHEL=1, 6) / 1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  45),IHEL=1, 6) / 1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  46),IHEL=1, 6) / 1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  47),IHEL=1, 6) / 1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  48),IHEL=1, 6) / 1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  49),IHEL=1, 6) / 1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  50),IHEL=1, 6) / 1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  51),IHEL=1, 6) / 1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  52),IHEL=1, 6) / 1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  53),IHEL=1, 6) / 1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  54),IHEL=1, 6) / 1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  55),IHEL=1, 6) / 1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  56),IHEL=1, 6) / 1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  57),IHEL=1, 6) / 1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  58),IHEL=1, 6) / 1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  59),IHEL=1, 6) / 1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  60),IHEL=1, 6) / 1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  61),IHEL=1, 6) / 1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  62),IHEL=1, 6) / 1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  63),IHEL=1, 6) / 1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  64),IHEL=1, 6) / 1, 1, 1, 1, 1, 1/
      DATA (  IC(IHEL,  1),IHEL=1, 6) / 1, 2, 3, 4, 5, 6/
      DATA (IDEN(IHEL),IHEL=  1,  1) /  36/
C ----------
C BEGIN CODE
C ----------
C     ADDED ALL THESE LINES
      ANS(1) = 0D0
      PRINT *,"STARTING NCOMB=",NCOMB
      DO IHEL=1,NCOMB
        T= WWlp(P1 , MZ, MW,NHEL(1,IHEL))		
        ANS(1)=ANS(1)+T
C        PRINT *,"IHEL= ", IHEL," T= ",T," ME=",ANS(1)," IDEN(1)= "
        IF (T .GT. 0) THEN 
           PRINT *," IHEL= ", IHEL," T= ",T," ME=",ANS(1)," IDEN(1)= ",
     & DBLE(IDEN(1))
	ENDIF
      ENDDO
      
      ANS(1)=ANS(1)/DBLE(IDEN(1))
C     END ADDED ALL THESE LINES

C     NN      NTRY=NTRY+1
C     NN      DO IPROC=1,NCROSS
C     NN      CALL SWITCHMOM(P1,P,IC(1,IPROC),JC,6)
C     NN      DO IHEL=1,6
C     NN         JC(IHEL) = +1
C     NN      ENDDO
C     NN       
C     NN      IF (multi_channel) THEN
C     NN          DO IHEL=1,NGRAPHS
C     NN              amp2(ihel)=0d0
C     NN              jamp2(ihel)=0d0
C     NN          ENDDO
C     NN          DO IHEL=1,int(jamp2(0))
C     NN              jamp2(ihel)=0d0
C     NN          ENDDO
C     NN      ENDIF
C     NN      ANS(IPROC) = 0D0
C     NN      write(hel_buff,'(16i5)') (0,i=1,nexternal)
C     NN      IF (ISUM_HEL .EQ. 0 .OR. NTRY .LT. 10) THEN
C     NN          DO IHEL=1,NCOMB
C     NN             IF (GOODHEL(IHEL,IPROC) .OR. NTRY .LT. 2) THEN
C     NN                 T=MATRIX(P ,NHEL(1,IHEL),JC(1))            
C     NN               DO JJ=1,nincoming
C     NN                 IF(POL(JJ).NE.1d0.AND.
C     NN     &              NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
C     NN                   T=T*ABS(POL(JJ))
C     NN                 ELSE IF(POL(JJ).NE.1d0)THEN
C     NN                   T=T*(2d0-ABS(POL(JJ)))
C     NN                 ENDIF
C     NN               ENDDO
C     NN               ANS(IPROC)=ANS(IPROC)+T
C     NN               IF (T .NE. 0D0 .AND. .NOT.    GOODHEL(IHEL,IPROC)) THEN
C     NN                   GOODHEL(IHEL,IPROC)=.TRUE.
C     NN                   NGOOD = NGOOD +1
C     NN                   IGOOD(NGOOD) = IHEL
C     NN               ENDIF
C     NN             ENDIF
C     NN          ENDDO
C     NN          JHEL = 1
C     NN          ISUM_HEL=MIN(ISUM_HEL,NGOOD)
C     NN      ELSE              !RANDOM HELICITY
C     NN          DO J=1,ISUM_HEL
C     NN              JHEL=JHEL+1
C     NN              IF (JHEL .GT. NGOOD) JHEL=1
C     NN              HWGT = REAL(NGOOD)/REAL(ISUM_HEL)
C     NN              IHEL = IGOOD(JHEL)
C     NN              T=MATRIX(P ,NHEL(1,IHEL),JC(1))            
C     NN              DO JJ=1,nincoming
C     NN                IF(POL(JJ).NE.1d0.AND.
C     NN     &             NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
C     NN                  T=T*ABS(POL(JJ))
C     NN                ELSE IF(POL(JJ).NE.1d0)THEN
C     NN                  T=T*(2d0-ABS(POL(JJ)))
C     NN                ENDIF
C     NN              ENDDO
C     NN              ANS(IPROC)=ANS(IPROC)+T*HWGT
C     NN          ENDDO
C     NN          IF (ISUM_HEL .EQ. 1) THEN
C     NN              WRITE(HEL_BUFF,'(16i5)')(NHEL(i,IHEL),i=1,nexternal)
C     NN          ENDIF
C     NN      ENDIF
C     NN      IF (MULTI_CHANNEL) THEN
C     NN          XTOT=0D0
C     NN          DO IHEL=1,MAPCONFIG(0)
C     NN              XTOT=XTOT+AMP2(MAPCONFIG(IHEL))
C     NN          ENDDO
C     NN          IF (XTOT.NE.0D0) THEN
C     NN              ANS(IPROC)=ANS(IPROC)*AMP2(MAPCONFIG(ICONFIG))/XTOT
C     NN          ELSE
C     NN              ANS(IPROC)=0D0
C     NN          ENDIF
C     NN      ENDIF
C     NN      ANS(IPROC)=ANS(IPROC)/DBLE(IDEN(IPROC))
C     NN      ENDDO
      END
       
       
      REAL*8 FUNCTION WWlp(P,MZ,MW,NHEL)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,6)
C  
C FOR PROCESS : u u~ -> e+ ve u~ d  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS,    NEIGEN 
      PARAMETER (NGRAPHS=   3,NEIGEN=  1) 
C   NN      include "genps.inc"
C   NN      include "nexternal.inc"
C   NN      include "maxamps.inc"
      INTEGER    NWAVEFUNCS     , NCOLOR
      PARAMETER (NWAVEFUNCS=  13, NCOLOR=   1) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C     ADDED MULTILINES BELOW
      INTEGER  maxamps
      double precision  Pi, Fourpi, Rt2, gfermi
      parameter( Pi = 3.14159265358979323846d0 )
      parameter( Fourpi = 4.0d0  * Pi )
      parameter( Rt2   = 1.414213562d0 )
      parameter( gfermi = 1.16639d-5 )
      parameter (maxamps=2500)
C     END ADDED MULTILINES BELOW
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,6)
C     Added single line below
      REAL*8 MH, MZ, MW
      INTEGER NHEL(6), IC(6)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J,K
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NGRAPHS), JAMP(NCOLOR)
      COMPLEX*16 W(18,NWAVEFUNCS)
C  
C GLOBAL VARIABLES
C  
      Double Precision amp2(maxamps), jamp2(0:maxamps)
      common/to_amps/  amp2,       jamp2
C     NN      include "coupl.inc"
C  
C COLOR DATA
C  
      DATA Denom(1  )/            1/                                       
      DATA (CF(i,1  ),i=1  ,1  ) /     9/                                  
C               T[ 2, 1]T[ 6, 5]                                           
C ----------
C BEGIN CODE
C ----------
C     Added multi lines below
      double precision beamEnergy,bMass,cMass,wMass,wWidth,zMass,topMass
      double precision sin2w,alpha,ee2,ee,temp_gwf,temp_gg,alphas
      double precision temp_sgg,sw,cw
      double precision ez,ey,gzu1,gzu2,gzd1,gzd2,gwwz,v,gwwh,ghbot,gh
      double complex gwf(2)
      double complex gg(2)
      double complex g(2)

      beamEnergy = 3500
      bMass = 4.7
      cMass = 1.42
      wMass = 80.419
      wWidth = 2.04759
      temp_gwf = -0.461905
      alphas = 0.13
      temp_gg = -1.27813
      temp_sgg = 1.27813

      gwf(1) = dcmplx(temp_gwf, Zero)
      gwf(2) = dcmplx(Zero, Zero)

C Remove IC
      CALL IXXXXX(P(0,1   ),ZERO ,NHEL(1   ),+1,W(1,1   ))        
      CALL OXXXXX(P(0,2   ),ZERO ,NHEL(2   ),-1,W(1,2   ))        
      CALL IXXXXX(P(0,3   ),ZERO ,NHEL(3   ),-1,W(1,3   ))        
      CALL OXXXXX(P(0,4   ),ZERO ,NHEL(4   ),+1,W(1,4   ))        
      CALL IXXXXX(P(0,5   ),ZERO ,NHEL(5   ),-1,W(1,5   ))        
      CALL OXXXXX(P(0,6   ),ZERO ,NHEL(6   ),+1,W(1,6   ))        
      CALL JIOXXX(W(1,3   ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,7   ))    
      CALL FVIXXX(W(1,1   ),W(1,7   ),GWF ,ZERO    ,ZERO    ,W(1,8   ))    
      CALL JIOXXX(W(1,8   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,9   ))    
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,9   ),GWF ,AMP(1   ))            
C      CALL JIOXXX(W(1,1   ),W(1,2   ),GAU ,ZERO    ,AWIDTH  ,W(1,10  ))    
C      CALL JVVXXX(W(1,7   ),W(1,10  ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
C     &     11  ))                                                          
C      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,11  ),GWF ,AMP(2   ))            
C      CALL JIOXXX(W(1,1   ),W(1,2   ),GZU ,ZMASS   ,ZWIDTH  ,W(1,12  ))    
C      CALL JVVXXX(W(1,7   ),W(1,12  ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
C     &     13  ))                                                          
C      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,13  ),GWF ,AMP(3   ))            

C      JAMP(   1) = +AMP(   1)+AMP(   2)+AMP(   3)
      JAMP(   1) = +AMP(   1)
      WWlp = 0.D0 
      DO I = 1, NCOLOR
          ZTEMP = (0.D0,0.D0)
          DO J = 1, NCOLOR
              ZTEMP = ZTEMP + CF(J,I)*JAMP(J)
          ENDDO
          WWlp =WWlp+ZTEMP*DCONJG(JAMP(I))/DENOM(I)   
      ENDDO
      Do I = 1, NGRAPHS
          amp2(i)=amp2(i)+amp(i)*dconjg(amp(i))
      Enddo
      Do I = 1, NCOLOR
          Jamp2(i)=Jamp2(i)+Jamp(i)*dconjg(Jamp(i))
      Enddo
C      CALL GAUGECHECK(JAMP,ZTEMP,EIGEN_VEC,EIGEN_VAL,NCOLOR,NEIGEN) 
      END

CCC ---------------------------------------------------------------------------------------------------------------
CCC ---------------------------------------------------------------------------------------------------------------
CCC ---------------------------------------------------------------------------------------------------------------


      SUBROUTINE WWlpAltM(P1,MZ,MW,ANS)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,NEXTERNAL)
C  
C FOR PROCESS : u~ u -> e+ ve u~ d  
C  
C Crossing   1 is u~ u -> e+ ve u~ d  
      IMPLICIT NONE
C  
C CONSTANTS
C  
C     NN      Include "genps.inc"
C     NN      Include "nexternal.inc"
C     NN      Include "maxamps.inc"
      INTEGER                 NCOMB,     NCROSS         
      PARAMETER (             NCOMB=  64, NCROSS=  1)
C     NN      INTEGER    THEL
C     NN      PARAMETER (THEL=NCOMB*NCROSS)
C  
C ARGUMENTS 
C  
      REAL*8 P1(0:3,6),ANS(NCROSS)
C  
C LOCAL VARIABLES 
C  
      INTEGER NHEL(6,NCOMB),NTRY
      REAL*8 T, P(0:3,6)
C Include the new variables
      REAL*8 MW
      REAL*8 MZ
      REAL*8 WWlpAlt
C End of new variables
      INTEGER IHEL,IDEN(NCROSS),IC(6,NCROSS)
      INTEGER IPROC,JC(6), I
      LOGICAL GOODHEL(NCOMB,NCROSS)
      INTEGER NGRAPHS
C     NN      REAL*8 hwgt, xtot, xtry, xrej, xr, yfrac(0:ncomb)
C     NN      INTEGER idum, ngood, igood(ncomb), jhel, j, jj
C     NN      LOGICAL warned
C     NN      REAL     xran1
C     NN      EXTERNAL xran1
C  
C GLOBAL VARIABLES
C  
C     NN      Double Precision amp2(maxamps), jamp2(0:maxamps)
C     NN      common/to_amps/  amp2,       jamp2
C     NN
C     NN      character*79         hel_buff
C     NN      common/to_helicity/  hel_buff
C     NN
C     NN      REAL*8 POL(2)
C     NN      common/to_polarization/ POL
C     NN
C     NN      integer          isum_hel
C     NN      logical                    multi_channel
C     NN      common/to_matrix/isum_hel, multi_channel
C     NN      INTEGER MAPCONFIG(0:LMAXCONFIGS), ICONFIG
C     NN      common/to_mconfigs/mapconfig, iconfig
C     NN      DATA NTRY,IDUM /0,-1/
C     NN      DATA xtry, xrej, ngood /0,0,0/
C     NN      DATA warned, isum_hel/.false.,0/
C     NN      DATA multi_channel/.true./
C     NN      SAVE yfrac, igood, jhel
C     NN      DATA NGRAPHS /    3/          
C     NN      DATA jamp2(0) /   1/          
C     NN      DATA GOODHEL/THEL*.FALSE./
      DATA (NHEL(IHEL,   1),IHEL=1, 6) /-1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,   2),IHEL=1, 6) /-1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,   3),IHEL=1, 6) /-1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,   4),IHEL=1, 6) /-1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,   5),IHEL=1, 6) /-1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,   6),IHEL=1, 6) /-1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,   7),IHEL=1, 6) /-1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,   8),IHEL=1, 6) /-1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,   9),IHEL=1, 6) /-1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  10),IHEL=1, 6) /-1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  11),IHEL=1, 6) /-1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  12),IHEL=1, 6) /-1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  13),IHEL=1, 6) /-1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  14),IHEL=1, 6) /-1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  15),IHEL=1, 6) /-1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  16),IHEL=1, 6) /-1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  17),IHEL=1, 6) /-1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  18),IHEL=1, 6) /-1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  19),IHEL=1, 6) /-1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  20),IHEL=1, 6) /-1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  21),IHEL=1, 6) /-1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  22),IHEL=1, 6) /-1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  23),IHEL=1, 6) /-1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  24),IHEL=1, 6) /-1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  25),IHEL=1, 6) /-1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  26),IHEL=1, 6) /-1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  27),IHEL=1, 6) /-1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  28),IHEL=1, 6) /-1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  29),IHEL=1, 6) /-1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  30),IHEL=1, 6) /-1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  31),IHEL=1, 6) /-1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  32),IHEL=1, 6) /-1, 1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  33),IHEL=1, 6) / 1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  34),IHEL=1, 6) / 1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  35),IHEL=1, 6) / 1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  36),IHEL=1, 6) / 1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  37),IHEL=1, 6) / 1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  38),IHEL=1, 6) / 1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  39),IHEL=1, 6) / 1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  40),IHEL=1, 6) / 1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  41),IHEL=1, 6) / 1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  42),IHEL=1, 6) / 1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  43),IHEL=1, 6) / 1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  44),IHEL=1, 6) / 1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  45),IHEL=1, 6) / 1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  46),IHEL=1, 6) / 1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  47),IHEL=1, 6) / 1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  48),IHEL=1, 6) / 1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  49),IHEL=1, 6) / 1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  50),IHEL=1, 6) / 1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  51),IHEL=1, 6) / 1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  52),IHEL=1, 6) / 1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  53),IHEL=1, 6) / 1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  54),IHEL=1, 6) / 1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  55),IHEL=1, 6) / 1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  56),IHEL=1, 6) / 1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  57),IHEL=1, 6) / 1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  58),IHEL=1, 6) / 1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  59),IHEL=1, 6) / 1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  60),IHEL=1, 6) / 1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  61),IHEL=1, 6) / 1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  62),IHEL=1, 6) / 1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  63),IHEL=1, 6) / 1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  64),IHEL=1, 6) / 1, 1, 1, 1, 1, 1/
      DATA (  IC(IHEL,  1),IHEL=1, 6) / 1, 2, 3, 4, 5, 6/
      DATA (IDEN(IHEL),IHEL=  1,  1) /  36/
C ----------
C BEGIN CODE
C ----------
C     ADDED ALL THESE LINES
      ANS(1) = 0D0
      PRINT *,"STARTING NCOMB=",NCOMB
      DO IHEL=1,NCOMB
        T= WWlpAlt(P1 , MZ, MW,NHEL(1,IHEL))		
        ANS(1)=ANS(1)+T
C        PRINT *,"IHEL= ", IHEL," T= ",T," ME=",ANS(1)," IDEN(1)= "
        IF (T .GT. 0) THEN 
           PRINT *," IHEL= ", IHEL," T= ",T," ME=",ANS(1)," IDEN(1)= ",
     & DBLE(IDEN(1))
	ENDIF
      ENDDO
      
      ANS(1)=ANS(1)/DBLE(IDEN(1))
C     END ADDED ALL THESE LINES

C     NN      NTRY=NTRY+1
C     NN      DO IPROC=1,NCROSS
C     NN      CALL SWITCHMOM(P1,P,IC(1,IPROC),JC,6)
C     NN      DO IHEL=1,6
C     NN         JC(IHEL) = +1
C     NN      ENDDO
C     NN       
C     NN      IF (multi_channel) THEN
C     NN          DO IHEL=1,NGRAPHS
C     NN              amp2(ihel)=0d0
C     NN              jamp2(ihel)=0d0
C     NN          ENDDO
C     NN          DO IHEL=1,int(jamp2(0))
C     NN              jamp2(ihel)=0d0
C     NN          ENDDO
C     NN      ENDIF
C     NN      ANS(IPROC) = 0D0
C     NN      write(hel_buff,'(16i5)') (0,i=1,nexternal)
C     NN      IF (ISUM_HEL .EQ. 0 .OR. NTRY .LT. 10) THEN
C     NN          DO IHEL=1,NCOMB
C     NN             IF (GOODHEL(IHEL,IPROC) .OR. NTRY .LT. 2) THEN
C     NN                 T=MATRIX(P ,NHEL(1,IHEL),JC(1))            
C     NN               DO JJ=1,nincoming
C     NN                 IF(POL(JJ).NE.1d0.AND.
C     NN     &              NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
C     NN                   T=T*ABS(POL(JJ))
C     NN                 ELSE IF(POL(JJ).NE.1d0)THEN
C     NN                   T=T*(2d0-ABS(POL(JJ)))
C     NN                 ENDIF
C     NN               ENDDO
C     NN               ANS(IPROC)=ANS(IPROC)+T
C     NN               IF (T .NE. 0D0 .AND. .NOT.    GOODHEL(IHEL,IPROC)) THEN
C     NN                   GOODHEL(IHEL,IPROC)=.TRUE.
C     NN                   NGOOD = NGOOD +1
C     NN                   IGOOD(NGOOD) = IHEL
C     NN               ENDIF
C     NN             ENDIF
C     NN          ENDDO
C     NN          JHEL = 1
C     NN          ISUM_HEL=MIN(ISUM_HEL,NGOOD)
C     NN      ELSE              !RANDOM HELICITY
C     NN          DO J=1,ISUM_HEL
C     NN              JHEL=JHEL+1
C     NN              IF (JHEL .GT. NGOOD) JHEL=1
C     NN              HWGT = REAL(NGOOD)/REAL(ISUM_HEL)
C     NN              IHEL = IGOOD(JHEL)
C     NN              T=MATRIX(P ,NHEL(1,IHEL),JC(1))            
C     NN              DO JJ=1,nincoming
C     NN                IF(POL(JJ).NE.1d0.AND.
C     NN     &             NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
C     NN                  T=T*ABS(POL(JJ))
C     NN                ELSE IF(POL(JJ).NE.1d0)THEN
C     NN                  T=T*(2d0-ABS(POL(JJ)))
C     NN                ENDIF
C     NN              ENDDO
C     NN              ANS(IPROC)=ANS(IPROC)+T*HWGT
C     NN          ENDDO
C     NN          IF (ISUM_HEL .EQ. 1) THEN
C     NN              WRITE(HEL_BUFF,'(16i5)')(NHEL(i,IHEL),i=1,nexternal)
C     NN          ENDIF
C     NN      ENDIF
C     NN      IF (MULTI_CHANNEL) THEN
C     NN          XTOT=0D0
C     NN          DO IHEL=1,MAPCONFIG(0)
C     NN              XTOT=XTOT+AMP2(MAPCONFIG(IHEL))
C     NN          ENDDO
C     NN          IF (XTOT.NE.0D0) THEN
C     NN              ANS(IPROC)=ANS(IPROC)*AMP2(MAPCONFIG(ICONFIG))/XTOT
C     NN          ELSE
C     NN              ANS(IPROC)=0D0
C     NN          ENDIF
C     NN      ENDIF
C     NN      ANS(IPROC)=ANS(IPROC)/DBLE(IDEN(IPROC))
C     NN      ENDDO
      END
       
       
      REAL*8 FUNCTION WWlpAlt(P,MZ,MW,NHEL)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,6)
C  
C FOR PROCESS : u~ u -> e+ ve u~ d  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS,    NEIGEN 
      PARAMETER (NGRAPHS=   3,NEIGEN=  1) 
C     NN      include "genps.inc"
C     NN      include "nexternal.inc"
C     NN      include "maxamps.inc"
      INTEGER    NWAVEFUNCS     , NCOLOR
      PARAMETER (NWAVEFUNCS=  13, NCOLOR=   1) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C     ADDED MULTILINES BELOW
      INTEGER  maxamps
      double precision  Pi, Fourpi, Rt2, gfermi
      parameter( Pi = 3.14159265358979323846d0 )
      parameter( Fourpi = 4.0d0  * Pi )
      parameter( Rt2   = 1.414213562d0 )
      parameter( gfermi = 1.16639d-5 )
      parameter (maxamps=2500)
C     END ADDED MULTILINES BELOW
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,6)
C     Added single line below
      REAL*8 MH, MZ, MW
      INTEGER NHEL(6), IC(6)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NGRAPHS), JAMP(NCOLOR)
      COMPLEX*16 W(18,NWAVEFUNCS)
C  
C GLOBAL VARIABLES
C  
      Double Precision amp2(maxamps), jamp2(0:maxamps)
      common/to_amps/  amp2,       jamp2
C     NN      include "coupl.inc"
C  
C COLOR DATA
C  
      DATA Denom(1  )/            1/                                       
      DATA (CF(i,1  ),i=1  ,1  ) /     9/                                  
C               T[ 1, 2]T[ 6, 5]                                           
C ----------
C BEGIN CODE
C ----------
C     Added multi lines below
      double precision beamEnergy,bMass,cMass,wMass,wWidth,zMass,topMass
      double precision sin2w,alpha,ee2,ee,temp_gwf,temp_gg,alphas
      double precision temp_sgg,sw,cw
      double precision ez,ey,gzu1,gzu2,gzd1,gzd2,gwwz,v,gwwh,ghbot,gh
      double complex gwf(2)
      double complex gg(2)
      double complex g(2)

      beamEnergy = 3500
      bMass = 4.7
      cMass = 1.42
      wMass = 80.419
      wWidth = 2.04759
      temp_gwf = -0.461905
      alphas = 0.13
      temp_gg = -1.27813
      temp_sgg = 1.27813

      gwf(1) = dcmplx(temp_gwf, Zero)
      gwf(2) = dcmplx(Zero, Zero)

C Remove IC
      CALL OXXXXX(P(0,1   ),ZERO ,NHEL(1   ),-1,W(1,1   ))        
      CALL IXXXXX(P(0,2   ),ZERO ,NHEL(2   ),+1,W(1,2   ))        
      CALL IXXXXX(P(0,3   ),ZERO ,NHEL(3   ),-1,W(1,3   ))        
      CALL OXXXXX(P(0,4   ),ZERO ,NHEL(4   ),+1,W(1,4   ))        
      CALL IXXXXX(P(0,5   ),ZERO ,NHEL(5   ),-1,W(1,5   ))        
      CALL OXXXXX(P(0,6   ),ZERO ,NHEL(6   ),+1,W(1,6   ))        
      CALL JIOXXX(W(1,3   ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,7   ))    
      CALL FVIXXX(W(1,2   ),W(1,7   ),GWF ,ZERO    ,ZERO    ,W(1,8   ))    
      CALL JIOXXX(W(1,8   ),W(1,1   ),GWF ,WMASS   ,WWIDTH  ,W(1,9   ))    
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,9   ),GWF ,AMP(1   ))            
C     NN      CALL JIOXXX(W(1,2   ),W(1,1   ),GAU ,ZERO    ,AWIDTH  ,W(1,10  ))    
C     NN      CALL JVVXXX(W(1,7   ),W(1,10  ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
C     NN     &     11  ))                                                          
C     NN      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,11  ),GWF ,AMP(2   ))            
C     NN      CALL JIOXXX(W(1,2   ),W(1,1   ),GZU ,ZMASS   ,ZWIDTH  ,W(1,12  ))    
C     NN      CALL JVVXXX(W(1,7   ),W(1,12  ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
C     NN     &     13  ))                                                          
C     NN      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,13  ),GWF ,AMP(3   ))            
C     NN      JAMP(   1) = -AMP(   1)-AMP(   2)-AMP(   3)
      JAMP(   1) = -AMP(   1)
      WWlpAlt = 0.D0 
      DO I = 1, NCOLOR
          ZTEMP = (0.D0,0.D0)
          DO J = 1, NCOLOR
              ZTEMP = ZTEMP + CF(J,I)*JAMP(J)
          ENDDO
          WWlpAlt =WWlpAlt+ZTEMP*DCONJG(JAMP(I))/DENOM(I)   
      ENDDO
      Do I = 1, NGRAPHS
          amp2(i)=amp2(i)+amp(i)*dconjg(amp(i))
      Enddo
      Do I = 1, NCOLOR
          Jamp2(i)=Jamp2(i)+Jamp(i)*dconjg(Jamp(i))
      Enddo
C      CALL GAUGECHECK(JAMP,ZTEMP,EIGEN_VEC,EIGEN_VAL,NCOLOR,NEIGEN) 
      END
      
CCC ---------------------------------------------------------------------------------------------------------------
CCC ---------------------------------------------------------------------------------------------------------------
CCC ---------------------------------------------------------------------------------------------------------------

       
      SUBROUTINE WWlmM(P1,MZ,MW,ANS)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,6)
C  
C FOR PROCESS : u u~ -> e- ve~ u d~  
C  
C Crossing   1 is u u~ -> e- ve~ u d~  
      IMPLICIT NONE
C  
C CONSTANTS
C  
C     NN      Include "genps.inc"
C     NN      Include "nexternal.inc"
C     NN      Include "maxamps.inc"
      INTEGER                 NCOMB,     NCROSS         
      PARAMETER (             NCOMB=  64, NCROSS=  1)
C     NN      INTEGER    THEL
C     NN    PARAMETER (THEL=NCOMB*NCROSS)
C  
C ARGUMENTS 
C  
      REAL*8 P1(0:3,6),ANS(NCROSS)
C  
C LOCAL VARIABLES 
C  
      INTEGER NHEL(6,NCOMB),NTRY
      REAL*8 T, P(0:3,6)
      REAL*8 MW
      REAL*8 MZ
      REAL*8 WWlm
      INTEGER IHEL,IDEN(NCROSS),IC(6,NCROSS)
      INTEGER IPROC,JC(6), I
      LOGICAL GOODHEL(NCOMB,NCROSS)
      INTEGER NGRAPHS
C     NN     REAL*8 hwgt, xtot, xtry, xrej, xr, yfrac(0:ncomb)
C     NN     INTEGER idum, ngood, igood(ncomb), jhel, j, jj
C     NN     LOGICAL warned
C     NN     REAL     xran1
C     NN     EXTERNAL xran1
C  
C GLOBAL VARIABLES
C  
C     NN      Double Precision amp2(maxamps), jamp2(0:maxamps)
C     NN      common/to_amps/  amp2,       jamp2
C     NN
C     NN      character*79         hel_buff
C     NN      common/to_helicity/  hel_buff
C     NN
C     NN      REAL*8 POL(2)
C     NN      common/to_polarization/ POL
C     NN
C     NN      integer          isum_hel
C     NN      logical                    multi_channel
C     NN      common/to_matrix/isum_hel, multi_channel
C     NN      INTEGER MAPCONFIG(0:LMAXCONFIGS), ICONFIG
C     NN      common/to_mconfigs/mapconfig, iconfig
C     NN      DATA NTRY,IDUM /0,-1/
C     NN      DATA xtry, xrej, ngood /0,0,0/
C     NN      DATA warned, isum_hel/.false.,0/
C     NN      DATA multi_channel/.true./
C     NN      SAVE yfrac, igood, jhel
C     NN      DATA NGRAPHS /    3/          
C     NN      DATA jamp2(0) /   1/          
C     NN      DATA GOODHEL/THEL*.FALSE./
      DATA (NHEL(IHEL,   1),IHEL=1, 6) /-1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,   2),IHEL=1, 6) /-1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,   3),IHEL=1, 6) /-1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,   4),IHEL=1, 6) /-1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,   5),IHEL=1, 6) /-1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,   6),IHEL=1, 6) /-1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,   7),IHEL=1, 6) /-1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,   8),IHEL=1, 6) /-1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,   9),IHEL=1, 6) /-1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  10),IHEL=1, 6) /-1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  11),IHEL=1, 6) /-1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  12),IHEL=1, 6) /-1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  13),IHEL=1, 6) /-1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  14),IHEL=1, 6) /-1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  15),IHEL=1, 6) /-1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  16),IHEL=1, 6) /-1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  17),IHEL=1, 6) /-1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  18),IHEL=1, 6) /-1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  19),IHEL=1, 6) /-1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  20),IHEL=1, 6) /-1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  21),IHEL=1, 6) /-1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  22),IHEL=1, 6) /-1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  23),IHEL=1, 6) /-1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  24),IHEL=1, 6) /-1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  25),IHEL=1, 6) /-1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  26),IHEL=1, 6) /-1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  27),IHEL=1, 6) /-1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  28),IHEL=1, 6) /-1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  29),IHEL=1, 6) /-1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  30),IHEL=1, 6) /-1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  31),IHEL=1, 6) /-1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  32),IHEL=1, 6) /-1, 1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  33),IHEL=1, 6) / 1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  34),IHEL=1, 6) / 1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  35),IHEL=1, 6) / 1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  36),IHEL=1, 6) / 1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  37),IHEL=1, 6) / 1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  38),IHEL=1, 6) / 1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  39),IHEL=1, 6) / 1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  40),IHEL=1, 6) / 1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  41),IHEL=1, 6) / 1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  42),IHEL=1, 6) / 1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  43),IHEL=1, 6) / 1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  44),IHEL=1, 6) / 1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  45),IHEL=1, 6) / 1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  46),IHEL=1, 6) / 1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  47),IHEL=1, 6) / 1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  48),IHEL=1, 6) / 1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  49),IHEL=1, 6) / 1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  50),IHEL=1, 6) / 1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  51),IHEL=1, 6) / 1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  52),IHEL=1, 6) / 1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  53),IHEL=1, 6) / 1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  54),IHEL=1, 6) / 1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  55),IHEL=1, 6) / 1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  56),IHEL=1, 6) / 1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  57),IHEL=1, 6) / 1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  58),IHEL=1, 6) / 1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  59),IHEL=1, 6) / 1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  60),IHEL=1, 6) / 1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  61),IHEL=1, 6) / 1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  62),IHEL=1, 6) / 1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  63),IHEL=1, 6) / 1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  64),IHEL=1, 6) / 1, 1, 1, 1, 1, 1/
      DATA (  IC(IHEL,  1),IHEL=1, 6) / 1, 2, 3, 4, 5, 6/
      DATA (IDEN(IHEL),IHEL=  1,  1) /  36/
C ----------
C BEGIN CODE
C ----------
C     ADDED ALL THESE LINES
      ANS(1) = 0D0
      PRINT *,"STARTING NCOMB=",NCOMB
      DO IHEL=1,NCOMB
        T= WWlm(P1 , MZ, MW,NHEL(1,IHEL))		
        ANS(1)=ANS(1)+T
C        PRINT *,"IHEL= ", IHEL," T= ",T," ME=",ANS(1)," IDEN(1)= "
        IF (T .GT. 0) THEN 
           PRINT *," IHEL= ", IHEL," T= ",T," ME=",ANS(1)," IDEN(1)= ",
     & DBLE(IDEN(1))
	ENDIF
      ENDDO
      
      ANS(1)=ANS(1)/DBLE(IDEN(1))
C     END ADDED ALL THESE LINES

C     NN      NTRY=NTRY+1
C     NN      DO IPROC=1,NCROSS
C     NN      CALL SWITCHMOM(P1,P,IC(1,IPROC),JC,6)
C     NN      DO IHEL=1,6
C     NN         JC(IHEL) = +1
C     NN      ENDDO
C     NN       
C     NN      IF (multi_channel) THEN
C     NN          DO IHEL=1,NGRAPHS
C     NN              amp2(ihel)=0d0
C     NN              jamp2(ihel)=0d0
C     NN          ENDDO
C     NN          DO IHEL=1,int(jamp2(0))
C     NN              jamp2(ihel)=0d0
C     NN          ENDDO
C     NN      ENDIF
C     NN      ANS(IPROC) = 0D0
C     NN      write(hel_buff,'(16i5)') (0,i=1,nexternal)
C     NN      IF (ISUM_HEL .EQ. 0 .OR. NTRY .LT. 10) THEN
C     NN          DO IHEL=1,NCOMB
C     NN             IF (GOODHEL(IHEL,IPROC) .OR. NTRY .LT. 2) THEN
C     NN                 T=MATRIX(P ,NHEL(1,IHEL),JC(1))            
C     NN               DO JJ=1,nincoming
C     NN                 IF(POL(JJ).NE.1d0.AND.
C     NN     &              NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
C     NN                   T=T*ABS(POL(JJ))
C     NN                 ELSE IF(POL(JJ).NE.1d0)THEN
C     NN                   T=T*(2d0-ABS(POL(JJ)))
C     NN                 ENDIF
C     NN               ENDDO
C     NN               ANS(IPROC)=ANS(IPROC)+T
C     NN               IF (T .NE. 0D0 .AND. .NOT.    GOODHEL(IHEL,IPROC)) THEN
C     NN                   GOODHEL(IHEL,IPROC)=.TRUE.
C     NN                   NGOOD = NGOOD +1
C     NN                   IGOOD(NGOOD) = IHEL
C     NN               ENDIF
C     NN             ENDIF
C     NN          ENDDO
C     NN          JHEL = 1
C     NN          ISUM_HEL=MIN(ISUM_HEL,NGOOD)
C     NN      ELSE              !RANDOM HELICITY
C     NN          DO J=1,ISUM_HEL
C     NN              JHEL=JHEL+1
C     NN              IF (JHEL .GT. NGOOD) JHEL=1
C     NN              HWGT = REAL(NGOOD)/REAL(ISUM_HEL)
C     NN              IHEL = IGOOD(JHEL)
C     NN              T=MATRIX(P ,NHEL(1,IHEL),JC(1))            
C     NN              DO JJ=1,nincoming
C     NN                IF(POL(JJ).NE.1d0.AND.
C     NN     &             NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
C     NN                  T=T*ABS(POL(JJ))
C     NN                ELSE IF(POL(JJ).NE.1d0)THEN
C     NN                  T=T*(2d0-ABS(POL(JJ)))
C     NN                ENDIF
C     NN              ENDDO
C     NN              ANS(IPROC)=ANS(IPROC)+T*HWGT
C     NN          ENDDO
C     NN          IF (ISUM_HEL .EQ. 1) THEN
C     NN              WRITE(HEL_BUFF,'(16i5)')(NHEL(i,IHEL),i=1,nexternal)
C     NN          ENDIF
C     NN      ENDIF
C     NN      IF (MULTI_CHANNEL) THEN
C     NN          XTOT=0D0
C     NN          DO IHEL=1,MAPCONFIG(0)
C     NN              XTOT=XTOT+AMP2(MAPCONFIG(IHEL))
C     NN          ENDDO
C     NN          IF (XTOT.NE.0D0) THEN
C     NN              ANS(IPROC)=ANS(IPROC)*AMP2(MAPCONFIG(ICONFIG))/XTOT
C     NN          ELSE
C     NN              ANS(IPROC)=0D0
C     NN          ENDIF
C     NN      ENDIF
C     NN      ANS(IPROC)=ANS(IPROC)/DBLE(IDEN(IPROC))
C     NN      ENDDO
      END
       
       
      REAL*8 FUNCTION WWlm(P,MZ,MW,NHEL)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,6)
C  
C FOR PROCESS : u u~ -> e- ve~ u d~  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS,    NEIGEN 
      PARAMETER (NGRAPHS=   3,NEIGEN=  1) 
C     NN      include "genps.inc"
C     NN      include "nexternal.inc"
C     NN      include "maxamps.inc"
      INTEGER    NWAVEFUNCS     , NCOLOR
      PARAMETER (NWAVEFUNCS=  13, NCOLOR=   1) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C     ADDED MULTILINES BELOW
      INTEGER  maxamps
      double precision  Pi, Fourpi, Rt2, gfermi
      parameter( Pi = 3.14159265358979323846d0 )
      parameter( Fourpi = 4.0d0  * Pi )
      parameter( Rt2   = 1.414213562d0 )
      parameter( gfermi = 1.16639d-5 )
      parameter (maxamps=2500)
C     END ADDED MULTILINES BELOW
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,6)
C     Added single line below
      REAL*8 MH, MZ, MW
      INTEGER NHEL(6), IC(6)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NGRAPHS), JAMP(NCOLOR)
      COMPLEX*16 W(18,NWAVEFUNCS)
C  
C GLOBAL VARIABLES
C  
      Double Precision amp2(maxamps), jamp2(0:maxamps)
      common/to_amps/  amp2,       jamp2
C     NN      include "coupl.inc"
C  
C COLOR DATA
C  
      DATA Denom(1  )/            1/                                       
      DATA (CF(i,1  ),i=1  ,1  ) /     9/                                  
C               T[ 2, 1]T[ 5, 6]                                           
C ----------
C BEGIN CODE
C ----------
C     Added multi lines below
      double precision beamEnergy,bMass,cMass,wMass,wWidth,zMass,topMass
      double precision sin2w,alpha,ee2,ee,temp_gwf,temp_gg,alphas
      double precision temp_sgg,sw,cw
      double precision ez,ey,gzu1,gzu2,gzd1,gzd2,gwwz,v,gwwh,ghbot,gh
      double complex gwf(2)
      double complex gg(2)
      double complex g(2)

      beamEnergy = 3500
      bMass = 4.7
      cMass = 1.42
      wMass = 80.419
      wWidth = 2.04759
      temp_gwf = -0.461905
      alphas = 0.13
      temp_gg = -1.27813
      temp_sgg = 1.27813

 


      gwf(1) = dcmplx(temp_gwf, Zero)
      gwf(2) = dcmplx(Zero, Zero)

C Remove IC
      CALL IXXXXX(P(0,1   ),ZERO ,NHEL(1   ),+1,W(1,1   ))        
      CALL OXXXXX(P(0,2   ),ZERO ,NHEL(2   ),-1,W(1,2   ))        
      CALL OXXXXX(P(0,3   ),ZERO ,NHEL(3   ),+1,W(1,3   ))        
      CALL IXXXXX(P(0,4   ),ZERO ,NHEL(4   ),-1,W(1,4   ))        
      CALL OXXXXX(P(0,5   ),ZERO ,NHEL(5   ),+1,W(1,5   ))        
      CALL IXXXXX(P(0,6   ),ZERO ,NHEL(6   ),-1,W(1,6   ))        
      CALL JIOXXX(W(1,4   ),W(1,3   ),GWF ,WMASS   ,WWIDTH  ,W(1,7   ))    
      CALL FVOXXX(W(1,2   ),W(1,7   ),GWF ,ZERO    ,ZERO    ,W(1,8   ))    
      CALL JIOXXX(W(1,1   ),W(1,8   ),GWF ,WMASS   ,WWIDTH  ,W(1,9   ))    
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,9   ),GWF ,AMP(1   ))            
C     NN      CALL JIOXXX(W(1,1   ),W(1,2   ),GAU ,ZERO    ,AWIDTH  ,W(1,10  ))    
C     NN      CALL JVVXXX(W(1,10  ),W(1,7   ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
C     NN     &     11  ))                                                          
C     NN      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,11  ),GWF ,AMP(2   ))            
C     NN      CALL JIOXXX(W(1,1   ),W(1,2   ),GZU ,ZMASS   ,ZWIDTH  ,W(1,12  ))    
C     NN      CALL JVVXXX(W(1,12  ),W(1,7   ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
C     NN     &     13  ))                                                          
C     NN      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,13  ),GWF ,AMP(3   ))            
C      JAMP(   1) = +AMP(   1)+AMP(   2)+AMP(   3)
      JAMP(   1) = +AMP(   1)
      WWlm = 0.D0 
      DO I = 1, NCOLOR
          ZTEMP = (0.D0,0.D0)
          DO J = 1, NCOLOR
              ZTEMP = ZTEMP + CF(J,I)*JAMP(J)
          ENDDO
          WWlm =WWlm+ZTEMP*DCONJG(JAMP(I))/DENOM(I)   
      ENDDO
      Do I = 1, NGRAPHS
          amp2(i)=amp2(i)+amp(i)*dconjg(amp(i))
      Enddo
      Do I = 1, NCOLOR
          Jamp2(i)=Jamp2(i)+Jamp(i)*dconjg(Jamp(i))
      Enddo
C      CALL GAUGECHECK(JAMP,ZTEMP,EIGEN_VEC,EIGEN_VAL,NCOLOR,NEIGEN) 
      END
       
CCC ---------------------------------------------------------------------------------------------------------------
CCC ---------------------------------------------------------------------------------------------------------------
CCC ---------------------------------------------------------------------------------------------------------------


      SUBROUTINE WWlmAltM(P1,MZ,MW,ANS)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,6)
C  
C FOR PROCESS : u~ u -> e- ve~ u d~  
C  
C Crossing   1 is u~ u -> e- ve~ u d~  
      IMPLICIT NONE
C  
C CONSTANTS
C  
C     NN      Include "genps.inc"
C     NN      Include "nexternal.inc"
C     NN      Include "maxamps.inc"
      INTEGER                 NCOMB,     NCROSS         
      PARAMETER (             NCOMB=  64, NCROSS=  1)
C     NN      INTEGER    THEL
C     NN      PARAMETER (THEL=NCOMB*NCROSS)
C  
C ARGUMENTS 
C  
      REAL*8 P1(0:3,6),ANS(NCROSS)
C  
C LOCAL VARIABLES 
C  
      INTEGER NHEL(6,NCOMB),NTRY
      REAL*8 T, P(0:3,6)
C Include the new variables
      REAL*8 MW
      REAL*8 MZ
      REAL*8 WWlmAlt
C End of new variables
      INTEGER IHEL,IDEN(NCROSS),IC(6,NCROSS)
      INTEGER IPROC,JC(6), I
      LOGICAL GOODHEL(NCOMB,NCROSS)
      INTEGER NGRAPHS
C     NN      REAL*8 hwgt, xtot, xtry, xrej, xr, yfrac(0:ncomb)
C     NN      INTEGER idum, ngood, igood(ncomb), jhel, j, jj
C     NN      LOGICAL warned
C     NN      REAL     xran1
C     NN      EXTERNAL xran1
C  
C GLOBAL VARIABLES
C  
C     NN      Double Precision amp2(maxamps), jamp2(0:maxamps)
C     NN      common/to_amps/  amp2,       jamp2
C     NN
C     NN      character*79         hel_buff
C     NN      common/to_helicity/  hel_buff
C     NN
C     NN      REAL*8 POL(2)
C     NN      common/to_polarization/ POL
C     NN
C     NN      integer          isum_hel
C     NN      logical                    multi_channel
C     NN      common/to_matrix/isum_hel, multi_channel
C     NN      INTEGER MAPCONFIG(0:LMAXCONFIGS), ICONFIG
C     NN      common/to_mconfigs/mapconfig, iconfig
C     NN      DATA NTRY,IDUM /0,-1/
C     NN      DATA xtry, xrej, ngood /0,0,0/
C     NN      DATA warned, isum_hel/.false.,0/
C     NN      DATA multi_channel/.true./
C     NN      SAVE yfrac, igood, jhel
C     NN      DATA NGRAPHS /    3/          
C     NN      DATA jamp2(0) /   1/          
C     NN      DATA GOODHEL/THEL*.FALSE./
      DATA (NHEL(IHEL,   1),IHEL=1, 6) /-1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,   2),IHEL=1, 6) /-1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,   3),IHEL=1, 6) /-1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,   4),IHEL=1, 6) /-1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,   5),IHEL=1, 6) /-1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,   6),IHEL=1, 6) /-1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,   7),IHEL=1, 6) /-1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,   8),IHEL=1, 6) /-1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,   9),IHEL=1, 6) /-1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  10),IHEL=1, 6) /-1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  11),IHEL=1, 6) /-1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  12),IHEL=1, 6) /-1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  13),IHEL=1, 6) /-1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  14),IHEL=1, 6) /-1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  15),IHEL=1, 6) /-1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  16),IHEL=1, 6) /-1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  17),IHEL=1, 6) /-1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  18),IHEL=1, 6) /-1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  19),IHEL=1, 6) /-1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  20),IHEL=1, 6) /-1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  21),IHEL=1, 6) /-1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  22),IHEL=1, 6) /-1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  23),IHEL=1, 6) /-1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  24),IHEL=1, 6) /-1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  25),IHEL=1, 6) /-1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  26),IHEL=1, 6) /-1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  27),IHEL=1, 6) /-1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  28),IHEL=1, 6) /-1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  29),IHEL=1, 6) /-1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  30),IHEL=1, 6) /-1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  31),IHEL=1, 6) /-1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  32),IHEL=1, 6) /-1, 1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  33),IHEL=1, 6) / 1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  34),IHEL=1, 6) / 1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  35),IHEL=1, 6) / 1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  36),IHEL=1, 6) / 1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  37),IHEL=1, 6) / 1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  38),IHEL=1, 6) / 1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  39),IHEL=1, 6) / 1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  40),IHEL=1, 6) / 1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  41),IHEL=1, 6) / 1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  42),IHEL=1, 6) / 1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  43),IHEL=1, 6) / 1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  44),IHEL=1, 6) / 1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  45),IHEL=1, 6) / 1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  46),IHEL=1, 6) / 1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  47),IHEL=1, 6) / 1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  48),IHEL=1, 6) / 1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  49),IHEL=1, 6) / 1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  50),IHEL=1, 6) / 1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  51),IHEL=1, 6) / 1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  52),IHEL=1, 6) / 1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  53),IHEL=1, 6) / 1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  54),IHEL=1, 6) / 1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  55),IHEL=1, 6) / 1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  56),IHEL=1, 6) / 1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  57),IHEL=1, 6) / 1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  58),IHEL=1, 6) / 1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  59),IHEL=1, 6) / 1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  60),IHEL=1, 6) / 1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  61),IHEL=1, 6) / 1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  62),IHEL=1, 6) / 1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  63),IHEL=1, 6) / 1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  64),IHEL=1, 6) / 1, 1, 1, 1, 1, 1/
      DATA (  IC(IHEL,  1),IHEL=1, 6) / 1, 2, 3, 4, 5, 6/
      DATA (IDEN(IHEL),IHEL=  1,  1) /  36/
C ----------
C BEGIN CODE
C ----------
C     ADDED ALL THESE LINES
      ANS(1) = 0D0
      PRINT *,"STARTING NCOMB=",NCOMB
      DO IHEL=1,NCOMB
        T= WWlmAlt(P1 , MZ, MW,NHEL(1,IHEL))		
        ANS(1)=ANS(1)+T
C        PRINT *,"IHEL= ", IHEL," T= ",T," ME=",ANS(1)," IDEN(1)= "
        IF (T .GT. 0) THEN 
           PRINT *," IHEL= ", IHEL," T= ",T," ME=",ANS(1)," IDEN(1)= ",
     & DBLE(IDEN(1))
	ENDIF
      ENDDO
      
      ANS(1)=ANS(1)/DBLE(IDEN(1))
C     END ADDED ALL THESE LINES

C     NN      NTRY=NTRY+1
C     NN      DO IPROC=1,NCROSS
C     NN      CALL SWITCHMOM(P1,P,IC(1,IPROC),JC,6)
C     NN      DO IHEL=1,6
C     NN         JC(IHEL) = +1
C     NN      ENDDO
C     NN       
C     NN      IF (multi_channel) THEN
C     NN          DO IHEL=1,NGRAPHS
C     NN              amp2(ihel)=0d0
C     NN              jamp2(ihel)=0d0
C     NN          ENDDO
C     NN          DO IHEL=1,int(jamp2(0))
C     NN              jamp2(ihel)=0d0
C     NN          ENDDO
C     NN      ENDIF
C     NN      ANS(IPROC) = 0D0
C     NN      write(hel_buff,'(16i5)') (0,i=1,nexternal)
C     NN      IF (ISUM_HEL .EQ. 0 .OR. NTRY .LT. 10) THEN
C     NN          DO IHEL=1,NCOMB
C     NN             IF (GOODHEL(IHEL,IPROC) .OR. NTRY .LT. 2) THEN
C     NN                 T=MATRIX(P ,NHEL(1,IHEL),JC(1))            
C     NN               DO JJ=1,nincoming
C     NN                 IF(POL(JJ).NE.1d0.AND.
C     NN     &              NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
C     NN                   T=T*ABS(POL(JJ))
C     NN                 ELSE IF(POL(JJ).NE.1d0)THEN
C     NN                   T=T*(2d0-ABS(POL(JJ)))
C     NN                 ENDIF
C     NN               ENDDO
C     NN               ANS(IPROC)=ANS(IPROC)+T
C     NN               IF (T .NE. 0D0 .AND. .NOT.    GOODHEL(IHEL,IPROC)) THEN
C     NN                   GOODHEL(IHEL,IPROC)=.TRUE.
C     NN                   NGOOD = NGOOD +1
C     NN                   IGOOD(NGOOD) = IHEL
C     NN               ENDIF
C     NN             ENDIF
C     NN          ENDDO
C     NN          JHEL = 1
C     NN          ISUM_HEL=MIN(ISUM_HEL,NGOOD)
C     NN      ELSE              !RANDOM HELICITY
C     NN          DO J=1,ISUM_HEL
C     NN              JHEL=JHEL+1
C     NN              IF (JHEL .GT. NGOOD) JHEL=1
C     NN              HWGT = REAL(NGOOD)/REAL(ISUM_HEL)
C     NN              IHEL = IGOOD(JHEL)
C     NN              T=MATRIX(P ,NHEL(1,IHEL),JC(1))            
C     NN              DO JJ=1,nincoming
C     NN                IF(POL(JJ).NE.1d0.AND.
C     NN     &             NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
C     NN                  T=T*ABS(POL(JJ))
C     NN                ELSE IF(POL(JJ).NE.1d0)THEN
C     NN                  T=T*(2d0-ABS(POL(JJ)))
C     NN                ENDIF
C     NN              ENDDO
C     NN              ANS(IPROC)=ANS(IPROC)+T*HWGT
C     NN          ENDDO
C     NN          IF (ISUM_HEL .EQ. 1) THEN
C     NN              WRITE(HEL_BUFF,'(16i5)')(NHEL(i,IHEL),i=1,nexternal)
C     NN          ENDIF
C     NN      ENDIF
C     NN      IF (MULTI_CHANNEL) THEN
C     NN          XTOT=0D0
C     NN          DO IHEL=1,MAPCONFIG(0)
C     NN              XTOT=XTOT+AMP2(MAPCONFIG(IHEL))
C     NN          ENDDO
C     NN          IF (XTOT.NE.0D0) THEN
C     NN              ANS(IPROC)=ANS(IPROC)*AMP2(MAPCONFIG(ICONFIG))/XTOT
C     NN          ELSE
C     NN              ANS(IPROC)=0D0
C     NN          ENDIF
C     NN      ENDIF
C     NN      ANS(IPROC)=ANS(IPROC)/DBLE(IDEN(IPROC))
C     NN      ENDDO
      END
       
       
      REAL*8 FUNCTION WWlmAlt(P,MZ,MW,NHEL)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,6)
C  
C FOR PROCESS : u~ u -> e- ve~ u d~  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS,    NEIGEN 
      PARAMETER (NGRAPHS=   3,NEIGEN=  1) 
C     NN      include "genps.inc"
C     NN      include "nexternal.inc"
C     NN      include "maxamps.inc"
      INTEGER    NWAVEFUNCS     , NCOLOR
      PARAMETER (NWAVEFUNCS=  13, NCOLOR=   1) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C     ADDED MULTILINES BELOW
      INTEGER  maxamps
      double precision  Pi, Fourpi, Rt2, gfermi
      parameter( Pi = 3.14159265358979323846d0 )
      parameter( Fourpi = 4.0d0  * Pi )
      parameter( Rt2   = 1.414213562d0 )
      parameter( gfermi = 1.16639d-5 )
      parameter (maxamps=2500)
C     END ADDED MULTILINES BELOW
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,6)
C     Added single line below
      REAL*8 MH, MZ, MW
      INTEGER NHEL(6), IC(6)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NGRAPHS), JAMP(NCOLOR)
      COMPLEX*16 W(18,NWAVEFUNCS)
C  
C GLOBAL VARIABLES
C  
      Double Precision amp2(maxamps), jamp2(0:maxamps)
      common/to_amps/  amp2,       jamp2
C     NN      include "coupl.inc"
C  
C COLOR DATA
C  
      DATA Denom(1  )/            1/                                       
      DATA (CF(i,1  ),i=1  ,1  ) /     9/                                  
C               T[ 1, 2]T[ 5, 6]                                           
C ----------
C BEGIN CODE
C ----------
C     Added multi lines below
      double precision beamEnergy,bMass,cMass,wMass,wWidth,zMass,topMass
      double precision sin2w,alpha,ee2,ee,temp_gwf,temp_gg,alphas
      double precision temp_sgg,sw,cw
      double precision ez,ey,gzu1,gzu2,gzd1,gzd2,gwwz,v,gwwh,ghbot,gh
      double complex gwf(2)
      double complex gg(2)
      double complex g(2)

      beamEnergy = 3500
      bMass = 4.7
      cMass = 1.42
      wMass = 80.419
      wWidth = 2.04759
      temp_gwf = -0.461905
      alphas = 0.13
      temp_gg = -1.27813
      temp_sgg = 1.27813

      gwf(1) = dcmplx(temp_gwf, Zero)
      gwf(2) = dcmplx(Zero, Zero)

C Remove IC
      CALL OXXXXX(P(0,1   ),ZERO ,NHEL(1   ),-1,W(1,1   ))        
      CALL IXXXXX(P(0,2   ),ZERO ,NHEL(2   ),+1,W(1,2   ))        
      CALL OXXXXX(P(0,3   ),ZERO ,NHEL(3   ),+1,W(1,3   ))        
      CALL IXXXXX(P(0,4   ),ZERO ,NHEL(4   ),-1,W(1,4   ))        
      CALL OXXXXX(P(0,5   ),ZERO ,NHEL(5   ),+1,W(1,5   ))        
      CALL IXXXXX(P(0,6   ),ZERO ,NHEL(6   ),-1,W(1,6   ))        
      CALL JIOXXX(W(1,4   ),W(1,3   ),GWF ,WMASS   ,WWIDTH  ,W(1,7   ))    
      CALL FVOXXX(W(1,1   ),W(1,7   ),GWF ,ZERO    ,ZERO    ,W(1,8   ))    
      CALL JIOXXX(W(1,2   ),W(1,8   ),GWF ,WMASS   ,WWIDTH  ,W(1,9   ))    
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,9   ),GWF ,AMP(1   ))            
C     NN      CALL JIOXXX(W(1,2   ),W(1,1   ),GAU ,ZERO    ,AWIDTH  ,W(1,10  ))    
C     NN      CALL JVVXXX(W(1,10  ),W(1,7   ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
C     NN     &     11  ))                                                          
C     NN      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,11  ),GWF ,AMP(2   ))            
C     NN      CALL JIOXXX(W(1,2   ),W(1,1   ),GZU ,ZMASS   ,ZWIDTH  ,W(1,12  ))    
C     NN      CALL JVVXXX(W(1,12  ),W(1,7   ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
C     NN     &     13  ))                                                          
C     NN      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,13  ),GWF ,AMP(3   ))            
C     NN      JAMP(   1) = -AMP(   1)-AMP(   2)-AMP(   3)
      JAMP(   1) = -AMP(   1)
      WWlmAlt = 0.D0 
      DO I = 1, NCOLOR
          ZTEMP = (0.D0,0.D0)
          DO J = 1, NCOLOR
              ZTEMP = ZTEMP + CF(J,I)*JAMP(J)
          ENDDO
          WWlmAlt =WWlmAlt+ZTEMP*DCONJG(JAMP(I))/DENOM(I)   
      ENDDO
      Do I = 1, NGRAPHS
          amp2(i)=amp2(i)+amp(i)*dconjg(amp(i))
      Enddo
      Do I = 1, NCOLOR
          Jamp2(i)=Jamp2(i)+Jamp(i)*dconjg(Jamp(i))
      Enddo
C      CALL GAUGECHECK(JAMP,ZTEMP,EIGEN_VEC,EIGEN_VAL,NCOLOR,NEIGEN) 
      END
       
  
