[CRAB]

jobtype = cmssw
### NOTE: just setting the name of the server (pi, lnl etc etc )
###       crab will submit the jobs to the server...
#server_name = bari
#server_name = cern
### For 2_7_1 & beyond
#use_server = slc5cern
### For 2_7_2 & beyond
use_server = 1
scheduler = glite
### to launch loacally
##scheduler = condor

[CMSSW]
### Splitting parameters
## 55,000K max per file in CRAB
## total_number_of_events=-1
## total_number_of_events=100000
## number_of_jobs = 1
pset = CRABLaunch_Any_V4MC.py
events_per_job = 2000


## ###Testing ###
## pset = CRABLaunch_Any_V4MC.py
## datasetpath = /TTbarJets-madgraph/Spring10-START3X_V26_S09-v1/GEN-SIM-RECO
## output_file = TTbarJ_TestRun.root
## events_per_job = 500
## number_of_jobs = 2
## ##total_number_of_events=10000
## [USER]
## ui_working_dir =  /uscms_data/d1/ilyao/FullPAT_3_8_7/MC/TestOutput/testReduced

#############FULL RUNS###########################
#####  Pythia:  #######
## ###100K
## pset = WWPY.py
## total_number_of_events=100000
## datasetpath = /WW/Spring10-START3X_V26_S09-v1/GEN-SIM-RECO
## output_file = WWPY.root
## [USER]
## ui_working_dir =  /uscms_data/d1/ilyao/FullPAT_3_8_7/MC/Unprocessed/WW

## ###100K
## pset = WZPY.py
## total_number_of_events=100000
## datasetpath = /WZ/Spring10-START3X_V26_S09-v1/GEN-SIM-RECO
## output_file = WZPY.root
## [USER]
## ui_working_dir =  /uscms_data/d1/ilyao/FullPAT_3_8_7/MC/Unprocessed/WZ

## ###100K
## pset = ZZPY.py
## total_number_of_events=100000
## datasetpath = /ZZ/Spring10-START3X_V26_S09-v1/GEN-SIM-RECO
## output_file = ZZPY.root
## [USER]
## ui_working_dir =  /uscms_data/d1/ilyao/FullPAT_3_8_7/MC/Unprocessed/ZZ


########  Madgraph:  ##########
## ###10M
## pset = WpJMG.py
## total_number_of_events=10000000
## datasetpath = /WJets-madgraph/Spring10-START3X_V26_S09-v1/GEN-SIM-RECO
## output_file = WpJMG.root
## [USER]
## ###ui_working_dir =  /uscms_data/d1/ilyao/FullPAT_3_8_7/MC/Unprocessed/WpJ_pt1
## ui_working_dir =  /uscms_data/d1/ilyao/FullPAT_3_8_7/MC/Unprocessed/WpJ_v2

## ###1M
## pset = ZpJMG.py
## total_number_of_events=1000000
## datasetpath = /ZJets-madgraph/Spring10-START3X_V26_S09-v1/GEN-SIM-RECO
## output_file = ZpJMG.root
## [USER]
## ui_working_dir =  /uscms_data/d1/ilyao/FullPAT_3_8_7/MC/Unprocessed/ZpJ

## ###10M
## pset = QCDHT100to250MG.py
## total_number_of_events=10000000
## datasetpath = /QCD_Pt100to250-madgraph/Spring10-START3X_V26_S09-v2/GEN-SIM-RECO
## output_file = QCDHT100to250MG.root
## [USER]
## ui_working_dir =  /uscms_data/d1/ilyao/FullPAT_3_8_7/MC/Unprocessed/QCDHT100to250_v2
## ui_working_dir =  /uscms_data/d1/ilyao/FullPAT_3_8_7/MC/Unprocessed/QCDHT100to250_pt2

## ###4.5M
## pset = QCDHT250to500MG.py
## total_number_of_events=4500000
## datasetpath = /QCD_Pt250to500-madgraph/Spring10-START3X_V26_S09-v1/GEN-SIM-RECO
## output_file = QCDHT250to500MG.root
## [USER]
## ui_working_dir =  /uscms_data/d1/ilyao/FullPAT_3_8_7/MC/Unprocessed/QCDHT250to500_v3

## ###1M
## pset = TTbarMG.py
## total_number_of_events=1000000
## datasetpath = /TTbarJets-madgraph/Spring10-START3X_V26_S09-v1/GEN-SIM-RECO
## output_file= TTbarMG.root
## events_per_job = 1000
## [USER]
## ui_working_dir =  /uscms_data/d1/ilyao/FullPAT_3_8_7/MC/Unprocessed/TTbar

## ###500K
## pset = STopTMG.py
## total_number_of_events=500000
## datasetpath= /SingleTop_tChannel-madgraph/Spring10-START3X_V26_S09-v1/GEN-SIM-RECO
## output_file = STopTMG.root
## [USER]
## ui_working_dir = /uscms_data/d1/ilyao/FullPAT_3_8_7/MC/Unprocessed/STopT

## ###400K
## pset = STopSMG.py
## total_number_of_events=400000
## datasetpath= /SingleTop_sChannel-madgraph/Spring10-START3X_V26_S09-v1/GEN-SIM-RECO
## output_file = STopSMG.root
## [USER]
## ui_working_dir =  /uscms_data/d1/ilyao/FullPAT_3_8_7/MC/Unprocessed/STopS

###450K
pset = STopTWMG.py
total_number_of_events=450000
datasetpath= /SingleTop_tWChannel-madgraph/Spring10-START3X_V26_S09-v1/GEN-SIM-RECO
output_file = STopTWMG.root
[USER]
ui_working_dir =  /uscms_data/d1/ilyao/FullPAT_3_8_7/MC/Unprocessed/STopTW_v3


#####  Higgs: WH  #######
## ### 220K (3_8_5)
## pset = WHMH115.py
## total_number_of_events = 210000 
## datasetpath = /WH_WToLNu_HToBB_M-115_7TeV-powheg-herwigpp/Fall10-START38_V12-v1/GEN-SIM-RECO
## output_file = WHMH115.root
## [USER]
## ui_working_dir = /uscms_data/d1/ilyao/FullPAT_3_8_7/MC/Unprocessed/WHMH115

## ### 220K (3_8_5)
## pset = WHMH120.py
## total_number_of_events = 210000
## datasetpath = /WH_WToLNu_HToBB_M-120_7TeV-powheg-herwigpp/Fall10-START38_V12-v1/GEN-SIM-RECO
## output_file = WHMH120.root
## [USER]
## ui_working_dir = /uscms_data/d1/ilyao/FullPAT_3_8_7/MC/Unprocessed/WHMH120

## ### 220K (3_8_5)
## pset = WHMH125.py
## total_number_of_events = 210000
## datasetpath = /WH_WToLNu_HToBB_M-125_7TeV-powheg-herwigpp/Fall10-START38_V12-v1/GEN-SIM-RECO
## output_file = WHMH125.root
## [USER]
## ui_working_dir = /uscms_data/d1/ilyao/FullPAT_3_8_7/MC/Unprocessed/WHMH125

## ### 220K (3_8_5)
## pset = WHMH130.py
## total_number_of_events = 210000
## datasetpath = /WH_WToLNu_HToBB_M-130_7TeV-powheg-herwigpp/Fall10-START38_V12-v1/GEN-SIM-RECO
## output_file = WHMH130.root
## [USER]
## ui_working_dir = /uscms_data/d1/ilyao/FullPAT_3_8_7/MC/Unprocessed/WHMH130

## ### 220K (3_8_5)
## pset = WHMH135.py
## total_number_of_events = 210000
## datasetpath = /WH_WToLNu_HToBB_M-135_7TeV-powheg-herwigpp/Fall10-START38_V12-v1/GEN-SIM-RECO
## output_file = WHMH135.root
## [USER]
## ui_working_dir = /uscms_data/d1/ilyao/FullPAT_3_8_7/MC/Unprocessed/WHMH135


#####  Higgs: HWW  #######
## ### 109K (3_8_5)
## pset = HWWMH120.py
## total_number_of_events = 100000
## datasetpath = /GluGluToHToWWToLNuQQ_M-120_7TeV-powheg-pythia6/Fall10-START38_V12-v1/GEN-SIM-RECO
## output_file = HWWMH120.root
## [USER]
## ui_working_dir = /uscms_data/d1/ilyao/FullPAT_3_8_7/MC/Unprocessed/HWWMH120

## ### 109K (3_8_5)
## pset = HWWMH130.py
## total_number_of_events = 100000
## datasetpath = /GluGluToHToWWToLNuQQ_M-130_7TeV-powheg-pythia6/Fall10-START38_V12-v1/GEN-SIM-RECO
## output_file = HWWMH130.root
## [USER]
## ui_working_dir = /uscms_data/d1/ilyao/FullPAT_3_8_7/MC/Unprocessed/HWWMH130

## ### 109K (3_8_5)
## pset = HWWMH140.py
## total_number_of_events = 100000
## datasetpath = /GluGluToHToWWToLNuQQ_M-140_7TeV-powheg-pythia6/Fall10-START38_V12-v1/GEN-SIM-RECO
## output_file = HWWMH140.root
## [USER]
## ui_working_dir = /uscms_data/d1/ilyao/FullPAT_3_8_7/MC/Unprocessed/HWWMH140

## ### 109K (3_8_5)
## pset = HWWMH150.py
## total_number_of_events = 100000
## datasetpath = /GluGluToHToWWToLNuQQ_M-150_7TeV-powheg-pythia6/Fall10-START38_V12-v1/GEN-SIM-RECO
## output_file = HWWMH150.root
## [USER]
## ui_working_dir = /uscms_data/d1/ilyao/FullPAT_3_8_7/MC/Unprocessed/HWWMH150

## ### 109K (3_8_5)
## pset = HWWMH160.py
## total_number_of_events = 100000
## datasetpath = /GluGluToHToWWToLNuQQ_M-160_7TeV-powheg-pythia6/Fall10-START38_V12-v1/GEN-SIM-RECO
## output_file = HWWMH160.root
## [USER]
## ui_working_dir = /uscms_data/d1/ilyao/FullPAT_3_8_7/MC/Unprocessed/HWWMH160

## ### 109K (3_8_5)
## pset = HWWMH170.py
## total_number_of_events = 100000
## datasetpath = /GluGluToHToWWToLNuQQ_M-170_7TeV-powheg-pythia6/Fall10-START38_V12-v1/GEN-SIM-RECO
## output_file = HWWMH170.root
## [USER]
## ui_working_dir = /uscms_data/d1/ilyao/FullPAT_3_8_7/MC/Unprocessed/HWWMH170


##[USER]
##ui_working_dir =  /uscms_data/d1/ilyao/FullPAT_3_8_7/MC/TestOutput/testReduced
###/uscms/home/ilyao/MATRIXELEMENT/CMSSW_3_8_7/src/TAMUWW/CRAB_Launch_Files/src/crab_MCV4_testReduced
### OUTPUT files Management
##  output back into UI
return_data = 1
email=ilyao@fnal.gov

### To use a specific name of UI directory where CRAB will create job to submit (with full path).
### the default directory will be "crab_0_data_time"
#ui_working_dir = /full/path/Name_of_Directory

### To specify the UI directory where to store the CMS executable output
### FULL path is mandatory. Default is  <ui_working_dir>/res will be used.
#outputdir= /full/path/yourOutDir

### To specify the UI directory where to store the stderr, stdout and .BrokerInfo of submitted jobs
### FULL path is mandatory. Default is <ui_working_dir>/res will be used.
#logdir= /full/path/yourLogDir

### OUTPUT files INTO A SE
copy_data = 0

### if you want to copy data in a "official CMS site"
### you have to specify the name as written in
#storage_element = T2_IT_Bari
### the user_remote_dir will be created under the SE mountpoint
### in the case of publication this directory is not considered
#user_remote_dir = name_directory_you_want

### if you want to copy your data at CAF
#storage_element = T2_CH_CAF
### the user_remote_dir will be created under the SE mountpoint
### in the case of publication this directory is not considered
#user_remote_dir = name_directory_you_want

### if you want to copy your data to your area in castor at cern
### or in a "not official CMS site" you have to specify the complete name of SE
#storage_element=srm-cms.cern.ch
### this directory is the mountpoin of SE
#storage_path=/srm/managerv2?SFN=/castor/cern.ch/
### directory or tree of directory under the mounpoint
#user_remote_dir = name_directory_you_want


### To publish produced output in a local istance of DBS set publish_data = 1
publish_data=0
### Specify the dataset name. The full path will be <primarydataset>/<publish_data_name>/USER
publish_data_name = name_you_prefer
### Specify the URL of DBS istance where CRAB has to publish the output files
#dbs_url_for_publication = https://cmsdbsprod.cern.ch:8443/cms_dbs_caf_analysis_01_writer/servlet/DBSServlet

### To specify additional files to be put in InputSandBox
### write the full path  if the files are not in the current directory
### (wildcard * are allowed): comma separated list
#additional_input_files = file1, file2, /full/path/file3

#if server
#thresholdLevel = 100
#eMail = your@Email.address

#user_remote_dir         = /uscms/home/ilyao/nobackup/SyncEx_3_8_7


[GRID]
#
## RB/WMS management:
rb = CERN

##  Black and White Lists management:
## By Storage
se_black_list = T0
#,T1
####,T2_US_Nebraska
##se_white_list = T3_US_FNALLPC
##se_white_list = T1_IT_CNAF,T1_DE_KIT

## By ComputingElement
#ce_black_list =
#ce_white_list =

[CONDORG]

# Set this to condor to override the batchsystem defined in gridcat.
#batchsystem = condor

# Specify addition condor_g requirments
# use this requirment to run on a cms dedicated hardare
# globus_rsl = (condor_submit=(requirements 'ClusterName == \"CMS\" && (Arch == \"INTEL\" || Arch == \"X86_64\")'))
# use this requirement to run on the new hardware
#globus_rsl = (condor_submit=(requirements 'regexp(\"cms-*\",Machine)'))

