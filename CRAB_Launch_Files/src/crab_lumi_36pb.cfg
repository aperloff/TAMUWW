[CRAB]

jobtype = cmssw
scheduler = glite
### NOTE: just setting the name of the server (pi, lnl etc etc )
###       crab will submit the jobs to the server...
#server_name = bari
###       or let crab chose one server automatically for
use_server = 1

[CMSSW]

## ###Testing ###
## lumis_per_job  = 100
## number_of_jobs = 10
## pset = CRABLaunch_SyncExV4Mu_MoriondData.py
## lumi_mask = Cert_136033-149442_7TeV_Nov4ReReco_Collisions10_JSON.txt
## #datasetpath  = /Mu/Run2010A-Nov4ReReco_v1/RECO
## datasetpath = /Mu/Run2010A-Sep17ReReco_v2/RECO
## datasetpath = /Mu/Run2010B-PromptReco-v2/AOD
## output_file = SyncV4Mu_MoriondData.root

## ###Testing ###
## pset = CRABLaunch_SyncExV4El.py
## datasetpath = /TTbarJets-madgraph/Spring10-START3X_V26_S09-v1/GEN-SIM-RECO
## output_file = SyncExV4El.root
## total_number_of_events=10000

## ######Sync ExerciseV4 MoriondData: Muons (https://twiki.cern.ch/twiki/bin/viewauth/CMS/TopLeptonPlusJetsRefSel_mu)######
## lumis_per_job  = 10
## number_of_jobs = 10000
## pset = CRABLaunch_SyncExV4Mu_MoriondData.py
## ##datasetpath = /Mu/Run2010A-Nov4ReReco_v1/AOD
## datasetpath = /Mu/Run2010B-Nov4ReReco_v1/AOD
## output_file = SyncV4Mu_MoriondData.root
## lumi_mask = Cert_136033-149442_7TeV_Nov4ReReco_Collisions10_JSON.txt

## ######Sync ExerciseV4 MoriondData: Electrons (https://twiki.cern.ch/twiki/bin/viewauth/CMS/TopLeptonPlusJetsRefSel_el)######
## lumis_per_job  = 50
## number_of_jobs = 10000
## pset = CRABLaunch_SyncExV4El_MoriondData.py
## ##datasetpath = /EG/Run2010A-Nov4ReReco_v1/AOD
## datasetpath = /Electron/Run2010B-Nov4ReReco_v1/AOD 
## output_file = SyncV4El_MoriondData.root
## lumi_mask = Cert_136033-149442_7TeV_Nov4ReReco_Collisions10_JSON.txt

## ##### PFlowLoose Selection######
## lumis_per_job  = 20
## number_of_jobs = 50000
## pset = CRABLaunch_PFlowLoose_V4Mu.py
## ##datasetpath = /Mu/Run2010A-Nov4ReReco_v1/AOD
## datasetpath = /Mu/Run2010B-Nov4ReReco_v1/AOD
## output_file = PFlowLoose_V4Mu.root
## lumi_mask = Cert_136033-149442_7TeV_Nov4ReReco_Collisions10_JSON.txt

## ###### Standard Electron Selection ######
## lumis_per_job  = 50
## number_of_jobs = 100000
## pset = ElData.py
## ##datasetpath = /EG/Run2010A-Nov4ReReco_v1/AOD
## datasetpath = /Electron/Run2010B-Nov4ReReco_v1/AOD 
## output_file = ElData.root
## lumi_mask = Cert_136033-149442_7TeV_Nov4ReReco_Collisions10_JSON.txt
## [USER]
## ui_working_dir = /uscms_data/d1/ilyao/FullPAT_3_8_7/Data/Unprocessed/ElData_ptB
## user_remote_dir = ElData_ptB

##### Standard Muon Selection ######
lumis_per_job  = 50
number_of_jobs = 10000
pset = MuData.py
##datasetpath = /Mu/Run2010A-Nov4ReReco_v1/AOD
datasetpath = /Mu/Run2010B-Nov4ReReco_v1/AOD
output_file = MuData.root
lumi_mask = Cert_136033-149442_7TeV_Nov4ReReco_Collisions10_JSON.txt
[USER]
ui_working_dir = /uscms_data/d1/ilyao/FullPAT_3_8_7/Data/Unprocessed/MuData_ptB
user_remote_dir = MuData_ptB


############## General Settings ##########################################
### OUTPUT files INTO A SE
return_data = 0
copy_data = 1
storage_element = T1_US_FNAL_Buffer
#email                   = ilyao@fnal.gov

### To use a specific name of UI directory where CRAB will create job to submit (with full path).
### the default directory will be "crab_0_data_time"
#ui_working_dir = /full/path/Name_of_Directory

### To specify the UI directory where to store the CMS executable output
### FULL path is mandatory. Default is  <ui_working_dir>/res will be used.
#outputdir= /full/path/yourOutDir

### To specify the UI directory where to store the stderr, stdout and .BrokerInfo of submitted jobs
### FULL path is mandatory. Default is <ui_working_dir>/res will be used.
#logdir= /full/path/yourLogDir

### if you want to copy data in a "official CMS site"
### you have to specify the name as written in
#storage_element = T2_IT_Bari
### the user_remote_dir will be created under the SE mountpoint
### in the case of publication this directory is not considered
#user_remote_dir = name_directory_you_want

### if you want to copy your data at CAF
#storage_element = T2_CH_CAF
### the user_remote_dir will be created under the SE mountpoint
### in the case of publication this directory is not considered
#user_remote_dir = name_directory_you_want

### if you want to copy your data to your area in castor at cern
### or in a "not official CMS site" you have to specify the complete name of SE
#storage_element=srm-cms.cern.ch
### this directory is the mountpoin of SE
#storage_path=/srm/managerv2?SFN=/castor/cern.ch/
### directory or tree of directory under the mounpoint
#user_remote_dir = name_directory_you_want


### To publish produced output in a local istance of DBS set publish_data = 1
publish_data=0
### Specify the dataset name. The full path will be <primarydataset>/<publish_data_name>/USER
publish_data_name = name_you_prefer
### Specify the URL of DBS istance where CRAB has to publish the output files
#dbs_url_for_publication = https://cmsdbsprod.cern.ch:8443/cms_dbs_caf_analysis_01_writer/servlet/DBSServlet

### To specify additional files to be put in InputSandBox
### write the full path  if the files are not in the current directory
### (wildcard * are allowed): comma separated list
#additional_input_files = file1, file2, /full/path/file3

#if server
#thresholdLevel = 100
#eMail = your@Email.address

[GRID]
#
## RB/WMS management:
rb = CERN

##  Black and White Lists management:
## By Storage
se_black_list = T0,T1
#se_white_list =

## By ComputingElement
#ce_black_list =
#ce_white_list =

[CONDORG]

# Set this to condor to override the batchsystem defined in gridcat.
#batchsystem = condor

# Specify addition condor_g requirments
# use this requirment to run on a cms dedicated hardare
# globus_rsl = (condor_submit=(requirements 'ClusterName == \"CMS\" && (Arch == \"INTEL\" || Arch == \"X86_64\")'))
# use this requirement to run on the new hardware
#globus_rsl = (condor_submit=(requirements 'regexp(\"cms-*\",Machine)'))

